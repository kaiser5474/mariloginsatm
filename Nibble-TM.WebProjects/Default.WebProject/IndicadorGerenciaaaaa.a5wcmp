{
    "$schema": "GRID",
    "$definition": {
        "_style_hasSassOverrides": false,
        "SecurityModel": "Group Based",
        "GUID": "d07b974b-6838-40fa-bb2c-29cf09ca402d",
        "DateFormatOnClient": "DD/MM/YY",
        "clientSideDateFormat": "dd/MM/yyyy",
        "flagTreeViewGrid": true,
        "flagTreeViewDV": true,
        "componentType": "Grid",
        "Xbasic": "dim tmpl as p\ntmpl.ComponentName = \"IndicadorGerenciaaaaa\"\ntmpl.ComponentType = \"Grid\"\ntmpl.AjaxOn = .t.\ntmpl.LayoutColumns = 1\ntmpl.useCompactTheme = .t.\ntmpl.showPulseEffect = .t.\ntmpl.queryEcho = .f.\ntmpl.connectToWebSocketServer = .f.\ntmpl.flagAddPKToORDER = .t.\ntmpl.saveFileType = \"Formatted JSON\"\ntmpl.captureJSErrorStackTrace = .f.\ntmpl.SecurityModel = \"Group Based\"\ntmpl.SecurityMode = \"\"\ntmpl.PreCalcMode = \"Standard\"\ntmpl.clientSideDateFormat = \"dd/MM/yyyy\"\ntmpl.publishedServerVariables = \"\"\ntmpl.datePicker.dayNames = \"Sun,Mon,Tue,Wed,Thu,Fri,Sat\"\ntmpl.datePicker.firstDayOfWeek = 1\ntmpl.datePicker.monthNames = \"January,February,March,April,May,June,July,August,September,October,November,December\"\ntmpl.datePicker.todayButtonText = \"Today\"\ntmpl.datePicker.closeButtonText = \"Close\"\ntmpl.datePicker.closeButtonText = \"Close\"\ntmpl.friendlydatesCustomizationJSON = \"\"\ntmpl.customizationString.javascriptDialogs = \"\"\ntmpl.iconMapOverrides = \"\"\ntmpl.DataSourceType = \"CS\"\ntmpl.CS.database_type = \"CS\"\ntmpl.CS.type = \"connectionstring\"\ntmpl.cs.ConnectionString  = \"::name::Nibble\"\ntmpl.CS.SQL = \"SELECT [Id_Recorrido], [FechaSalida] FROM [N_Recorrido] WHERE Id_TipoFlete = 6\"\nDIM tmpl.Arguments[1] AS P\nwith tmpl.Arguments[1]\n\t.Name = \"\"\n\t.DataType = \"\"\n\t.Source = \"\"\n\t.SourceDisplay = \"\"\n\t.VariableScope = \"\"\n\t.VariableName = \"\"\n\t.VariableWithScope = \"\"\n\t.DefaultValue = \"\"\n\t.Prompt = .f.\n\t.PromptText = \"\"\n\t.PromptControlType = \"\"\n\t.PromptChoices = \"\"\n\t.PromptDlgTitle = \"\"\n\t.PromptTextAbove = \"\"\n\t.PreviewValue = \"\"\nend with\nDIM tmpl.ArgumentsPage AS P\nwith tmpl.ArgumentsPage\n\t.PromptTextAbove = \"\"\nend with\ntmpl.CS.PrimaryKeyColumns = \"Id_Recorrido\"\ntmpl.CS.IdentitySequenceName  = \"\"\ntmpl.CS.primaryKeyTopAliasIsAutoIncrement  = .t.\ntmpl.grid_layout_style = 1\ntmpl.add_records_only = .f.\ntmpl.rows = 10\ntmpl.maxRowsPerPage = 200\ntmpl.rowsWhenSearchActive = -1\ntmpl.suppress_empty_rows = .t.\ntmpl.has_row_separator = .t.\ntmpl.alternate_bands = .f.\ntmpl.even_band_size = 1\ntmpl.odd_band_size = 1\ntmpl.alternate_column_bands = .f.\ntmpl.even_column_band_size = 1\ntmpl.odd_column_band_size = 1\ntmpl.conditionalStyle = \"\"\ntmpl.clientSideConditionalStyle = \"\"\ntmpl.show_title = .f.\ntmpl.title = \"\"\ntmpl.FontSize = \"Medium\"\ntmpl.No_records_message = \"No records in query\"\ntmpl.total_records_row_position = 1\ntmpl.total_records_row = \"Records:&nbsp; {Total_Records}&nbsp;\"\ntmpl.show_column_titles = 1\ntmpl.suppress_titles_if_no_records = .f.\ntmpl.show_row_labels = .t.\ntmpl.snakingLayout_suppressRepeatedLabels = .f.\ntmpl.sort_style = 3\ntmpl.reset_page_number_when_sorting = .t.\ntmpl.allowGridBodyScrolling = .f.\ntmpl.scrollableRegionHeight = \"2in\"\ntmpl.scrollableRegionWidth = \"100%\"\ntmpl.fixedWidthColumns = .f.\ntmpl.defaultColumnWidth = \"1in\"\ntmpl.columnWidthSettings = \"\"\ntmpl.EditRegion.Grid.Top = <<%editregion%\n%editregion%\ntmpl.EditRegion.Grid.Bottom = <<%editregion%\n%editregion%\ntmpl.EditRegion.Grid.Left = <<%editregion%\n%editregion%\ntmpl.EditRegion.Grid.Right = <<%editregion%\n%editregion%\ntmpl.HasNewRecordsTitle = .f.\ntmpl.NewRecordsTitle = \"<tr><td class=\\\"[class.gridData]\\\" colspan=\\\"{a5_colspan}\\\" style=\\\"padding: 0px;\\\" >New Records</td></tr>\"\ntmpl.HasExistingRecordsTitle = .f.\ntmpl.ExistingRecordsTitle = \"<tr><td class=\\\"[class.gridData]\\\" colspan=\\\"{a5_colspan}\\\" style=\\\"padding: 0px;\\\" >Existing Records</td></tr>\"\ntmpl.Highlight_row_onHover =  .t.\ntmpl.Highlight_row_onSelect =  .t.\ntmpl.HasRecordsPerPageSelector = .t.\ntmpl.RecordsPerPageChoices =   \"1,2,5,10,25,50,75,100\"\ntmpl.RecordsPerPageSelectorTemplate = \"&nbsp;&nbsp;{Grid.RecordsPerPageSelector} Records per page\"\ntmpl.XbasicFunctionDeclarations = <<%XbasicFunctions%\nfunction paraTiempos as c (e as p)\n\t'DIM a connection variable\n\tdim args as sql::Arguments\n\tdim sqlStatement as c\n\tDIM cn as SQL::Connection\n\tdim flagResult as l \n\tdim tiempo as n\n\tdim tiempoDiferencial as n\n\tdim tiempoTotal as n\n\tdim rs as sql::resultset\n\tdim dias as n\n\tdim horas as n\n\tdim valor as n\n\tdim fechaInicio as d\n\tdim fechaUltima as d\n\tdim horaDesde as t\n\tdim horaHAsta as t\t\n\tdim totalTiempoReal as n\n\tdim totalTiempoEstimado as n\n\tdim sqlStatement2 as c \n\tdim cantViajes as n\n\tdim cantViajesOK as n\n\tdim cantViajesMAL as n\n\tdim paraCalculo as n\n\tdim valorMaximo as n\n\tdim valorMinimo as n\n\tdim Id_Recorrido as n\n\tdim args3 as sql::Arguments\n\tflagResult = cn.open(\"::Name::Nibble\")\n\tif flagResult = .f. then \n\t\tui_msg_box(\"Error\",\"Could not connect to database. Error reported was: \" + crlf() + cn.CallResult.text)\n\t\tparaTiempos = \"alert('Error de conexion a la BD.')\"\n\t\tend \n\tend if\n'Aqui estoy analizando enero\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-01-01') AND (RecMedTranspRepAct.Fecha <= '2019-01-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Enero = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\n'Aqui estoy analizando febrero\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-02-01') AND (RecMedTranspRepAct.Fecha <= '2019-02-28') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Febrero = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar febrero\t\n'Aqui estoy analizando marzo\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-03-01') AND (RecMedTranspRepAct.Fecha <= '2019-03-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Marzo = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar marzo\t\t\n'Aqui estoy analizando abril\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-04-01') AND (RecMedTranspRepAct.Fecha <= '2019-04-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Abril = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar abril\t\t\t\n'Aqui estoy analizando mayo\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-05-01') AND (RecMedTranspRepAct.Fecha <= '2019-05-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Mayo = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar mayo\t\n'Aqui estoy analizando junio\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-06-01') AND (RecMedTranspRepAct.Fecha <= '2019-06-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Junio = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar junio\t\t\n'Aqui estoy analizando julio\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-07-01') AND (RecMedTranspRepAct.Fecha <= '2019-07-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Julio = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar julio\t\n'Aqui estoy analizando agosto\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-08-01') AND (RecMedTranspRepAct.Fecha <= '2019-08-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Agosto = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar agosto\t\n'Aqui estoy analizando septiembre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-09-01') AND (RecMedTranspRepAct.Fecha <= '2019-09-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Septiembre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar septiembre\t\n'Aqui estoy analizando octubre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-10-01') AND (RecMedTranspRepAct.Fecha <= '2019-10-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Octubre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar octubre\n'Aqui estoy analizando noviembre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-11-01') AND (RecMedTranspRepAct.Fecha <= '2019-11-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Noviembre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar noviembre\n'Aqui estoy analizando diciembre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-12-01') AND (RecMedTranspRepAct.Fecha <= '2019-12-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\targs.Add(\"id_recorrido\", 0)\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\tend if\nend while\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Diciembre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar diciembre\ncn.close()\nparaTiempos = \"\"\nend function\nfunction paraTiemposIndicador6 as c (e as p)\n\tdim sqlStatement as c\n\tdim sqlStatement2 as c\n\tDIM cn as SQL::Connection\n\tdim flagResult as l \n\tflagResult = cn.open(\"::Name::Nibble\")\n\tif flagResult = .f. then \n\t\tui_msg_box(\"Error\",\"Could not connect to database. Error reported was: \" + crlf() + cn.CallResult.text)\n\t\tparaTiempos = \"alert('Error de conexion a la BD.')\"\n\t\tend \n\tend if\n\tdim args as sql::Arguments\n\targs.Add(\"FechaInicial\", \"\")\n\targs.Add(\"FechaFinal\", \"\")\n\tdim args3 as sql::Arguments\nsqlStatement = <<%txt%\nSELECT       RecMedTransp.Id_MedioTransportacion\nFROM            N_Recorrido LEFT OUTER JOIN\n                 View_RecorridoUltimoRecMedTransp ON N_Recorrido.Id_Recorrido = View_RecorridoUltimoRecMedTransp.Id_Recorrido LEFT OUTER JOIN\n                 RecMedTranspRepAct ON N_Recorrido.Id_Recorrido = RecMedTranspRepAct.Id_Recorrido INNER JOIN\n                 RecMedTransp ON View_RecorridoUltimoRecMedTransp.Id_RecMedTransp = RecMedTransp.Id_RecMedTransp INNER JOIN\n                       N_MediosTransportacion ON RecMedTransp.Id_MedioTransportacion = N_MediosTransportacion.Id_MedioTransportacion\nWHERE        (RecMedTranspRepAct.Fecha >= :FechaInicial) AND (RecMedTranspRepAct.Fecha <= :FechaFinal) AND (N_Recorrido.Id_TipoEjecucion = 1)\nGROUP BY RecMedTransp.Id_MedioTransportacion\n%txt%\n\n'aqui estoy buscando el segundo parametro de la primera semana\nsqlStatement2 = <<%txt%\nSELECT  RecMedTransp.Id_MedioTransportacion\nFROM    N_Recorrido LEFT OUTER JOIN\n        View_RecorridoUltimoRecMedTransp ON N_Recorrido.Id_Recorrido = View_RecorridoUltimoRecMedTransp.Id_Recorrido \n        LEFT OUTER JOIN RecMedTranspRepAct ON N_Recorrido.Id_Recorrido = RecMedTranspRepAct.Id_Recorrido INNER JOIN\n        RecMedTransp ON View_RecorridoUltimoRecMedTransp.Id_RecMedTransp = RecMedTransp.Id_RecMedTransp INNER JOIN\n        N_MediosTransportacion ON RecMedTransp.Id_MedioTransportacion = N_MediosTransportacion.Id_MedioTransportacion\nWHERE   (RecMedTranspRepAct.Fecha >= :FechaInicial) AND (RecMedTranspRepAct.Fecha <= :FechaFinal) \n\t\tAND (RecMedTranspRepAct.Id_Actividad IN (11, 14, 28, 55, 56, 84, 87, 89, 90, 92, 107, 109, 110, 120, 144, 170, 171, 180, 181, 192, 202, 204)) \n        AND (N_Recorrido.Id_TipoEjecucion = 1)\nGROUP BY RecMedTransp.Id_MedioTransportacion\n%txt%\n\n'*** NOVIEMBRE ***\n'***SEMANA 1 ***\nargs.Add(\"FechaInicial\", \"2019-10-29\")\nargs.Add(\"FechaFinal\", \"2019-11-07\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\ncantidadSemana1 = 0\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\ncantidadPar2Semana1 = 0\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'*** SEMANA 2 ***\nargs.Add(\"FechaInicial\", \"2019-11-08\")\nargs.Add(\"FechaFinal\", \"2019-11-14\")\ncn.Execute(sqlStatement, args)\ndim rs1 as sql::resultset\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\ndim rs2 as sql::resultset\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'*** SEMANA 3 ***\nargs.Add(\"FechaInicial\", \"2019-11-15\")\nargs.Add(\"FechaFinal\", \"2019-11-21\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'*** SEMANA 4 ***\nargs.Add(\"FechaInicial\", \"2019-11-22\")\nargs.Add(\"FechaFinal\", \"2019-11-28\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\nvalorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\nsql = <<%sql%\n\tUPDATE Objetivo_Proceso\n\tSET Noviembre = :Mes\n\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n%sql%\n \nargs3.Add(\"Mes\", round_up(valorIndicador6, 2))\ncn.Execute(sql, args3)\n'*** AQUI TERMINO NOVIEMBRE ***'\n'*** OCTUBRE ***\nargs.Add(\"FechaInicial\", \"2019-09-29\")\nargs.Add(\"FechaFinal\", \"2019-10-07\")\ncn.Execute(sqlStatement, args)\ndim rs1 as sql::resultset\nrs1 = cn.ResultSet\t\ndim cantidadSemana1 as n\ncantidadSemana1 = 0\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\ndim rs2 as sql::resultset\nrs2 = cn.ResultSet\ndim cantidadPar2Semana1 as n\ncantidadPar2Semana1 = 0\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\nargs.Add(\"FechaInicial\", \"2019-10-08\")\nargs.Add(\"FechaFinal\", \"2019-10-14\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'octubre semana 3\nargs.Add(\"FechaInicial\", \"2019-10-15\")\nargs.Add(\"FechaFinal\", \"2019-10-21\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'octubre semana 4\nargs.Add(\"FechaInicial\", \"2019-10-22\")\nargs.Add(\"FechaFinal\", \"2019-10-28\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\nvalorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\ndim sql as c\nsql = <<%sql%\n\tUPDATE Objetivo_Proceso\n\tSET Octubre = :Mes\n\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n%sql%\n \nargs3.Add(\"Mes\", round_up(valorIndicador6, 2))\ncn.Execute(sql, args3)\n'*** TERMINO OCTUBRE *** '\n'*** SEPTIEMBRE ***\n'***SEMANA 1 ***\nargs.Add(\"FechaInicial\", \"2019-08-29\")\nargs.Add(\"FechaFinal\", \"2019-09-07\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\ncantidadSemana1 = 0\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\ncantidadPar2Semana1 = 0\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'*** SEMANA 2 ***\nargs.Add(\"FechaInicial\", \"2019-09-08\")\nargs.Add(\"FechaFinal\", \"2019-09-14\")\ncn.Execute(sqlStatement, args)\ndim rs1 as sql::resultset\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\ndim rs2 as sql::resultset\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'*** SEMANA 3 ***\nargs.Add(\"FechaInicial\", \"2019-09-15\")\nargs.Add(\"FechaFinal\", \"2019-09-21\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n'*** SEMANA 4 ***\nargs.Add(\"FechaInicial\", \"2019-09-22\")\nargs.Add(\"FechaFinal\", \"2019-09-28\")\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\nvalorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\nsql = <<%sql%\n\tUPDATE Objetivo_Proceso\n\tSET Septiembre = :Mes\n\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n%sql%\n \nargs3.Add(\"Mes\", round_up(valorIndicador6, 2))\ncn.Execute(sql, args3)\n'*** AQUI TERMINO SEPTIEMBRE\n''*** AGOSTO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-07-29\")\n'args.Add(\"FechaFinal\", \"2019-08-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-08-08\")\n'args.Add(\"FechaFinal\", \"2019-08-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-08-15\")\n'args.Add(\"FechaFinal\", \"2019-08-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-08-22\")\n'args.Add(\"FechaFinal\", \"2019-08-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Agosto = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO AGOSTO ***'\n''*** JULIO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-06-29\")\n'args.Add(\"FechaFinal\", \"2019-07-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-07-08\")\n'args.Add(\"FechaFinal\", \"2019-07-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-07-15\")\n'args.Add(\"FechaFinal\", \"2019-07-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-07-22\")\n'args.Add(\"FechaFinal\", \"2019-07-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Julio = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO JULIO ***\n''*** JUNIO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-05-29\")\n'args.Add(\"FechaFinal\", \"2019-06-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-06-08\")\n'args.Add(\"FechaFinal\", \"2019-06-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-06-15\")\n'args.Add(\"FechaFinal\", \"2019-06-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-06-22\")\n'args.Add(\"FechaFinal\", \"2019-06-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Junio = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** MAYO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-04-29\")\n'args.Add(\"FechaFinal\", \"2019-05-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-05-08\")\n'args.Add(\"FechaFinal\", \"2019-05-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-05-15\")\n'args.Add(\"FechaFinal\", \"2019-05-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-05-22\")\n'args.Add(\"FechaFinal\", \"2019-05-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Mayo = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** AQUI TERMINO MAYO ***'\n'\n''*** ABRIL ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-03-29\")\n'args.Add(\"FechaFinal\", \"2019-04-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-04-08\")\n'args.Add(\"FechaFinal\", \"2019-04-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-04-15\")\n'args.Add(\"FechaFinal\", \"2019-04-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-04-22\")\n'args.Add(\"FechaFinal\", \"2019-04-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Abril = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO ABRIL ***'\n'\n''*** MARZO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-03-01\")\n'args.Add(\"FechaFinal\", \"2019-03-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-03-08\")\n'args.Add(\"FechaFinal\", \"2019-03-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-03-15\")\n'args.Add(\"FechaFinal\", \"2019-03-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-03-22\")\n'args.Add(\"FechaFinal\", \"2019-03-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Marzo = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO MARZO ***'\n'\n''*** FEBRERO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-01-29\")\n'args.Add(\"FechaFinal\", \"2019-02-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-02-08\")\n'args.Add(\"FechaFinal\", \"2019-02-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-02-15\")\n'args.Add(\"FechaFinal\", \"2019-02-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-02-22\")\n'args.Add(\"FechaFinal\", \"2019-02-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Febrero = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** AQUI TERMINO FEBRERO ***'\n'\n''*** ENERO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-01-01\")\n'args.Add(\"FechaFinal\", \"2019-01-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-01-08\")\n'args.Add(\"FechaFinal\", \"2019-01-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-01-15\")\n'args.Add(\"FechaFinal\", \"2019-01-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-01-22\")\n'args.Add(\"FechaFinal\", \"2019-01-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Enero = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** AQUI TERMINO ENERO***'\nend function\n%XbasicFunctions%\ntmpl.has_qbe_row = .f.\ntmpl.qbe.initial_display = \"Hidden\"\ntmpl.qbe.toggleQBERowHyperlinkText = \"Show/Hide QBE Row\"\ntmpl.has_advancedSearch = .f.\ntmpl.hasLinkedContent = .f.\ntmpl.hasExternalNavigators = .f.\ntmpl.hasRowExpandColumn = .f.\ntmpl.hasSelectedRowColumn = .t.\ntmpl.hasCheckboxSelectColumn = .f.\ntmpl.AdditionalGridStyles = \"\"\ntmpl.LocalCss = \"\"\ntmpl.CSSLinkedFiles = \"\"\ntmpl.localsvg = \"\"\ntmpl.SVGLinkedFiles = \"\"\ntmpl.CSSIcons = \"\"\ntmpl.JavaScriptLinkedFiles = \"\"\ntmpl.useMasterTemplate = .f.\ntmpl.MasterTemplateStyle = \"Table - Vertical Layout\"\ntmpl.MasterLayoutTemplate = \"\"\ntmpl.MasterLayoutTemplateJavascript = \"\"\ntmpl.MasterLayout.PaneLabel.Search = \"Search\"\ntmpl.MasterLayout.PaneLabel.Grid = \"Grid\"\ntmpl.MasterLayout.PaneLabel.DetailView = \"Detail\"\ntmpl.MasterLayout.AccordionStyle = \"Multiple\"\ntmpl.MasterLayout.InitialOpenPanes = \"Search,Grid,DetailView\"\ntmpl.verticalAlignDataInColumns = \"Middle\"\ntmpl.CanCollapseGrid = .f.\ntmpl.CollapseBar.Title = \"Collapse Grid\"\ntmpl.CollapseBar.OpenIcon = \"\"\ntmpl.CollapseBar.ClosedIcon = \"\"\ntmpl.CollapseBar.Style = \"\"\ntmpl.Collapsebar.Class = \"\"\ntmpl.Collapsebar.ContainerStyle = \"\"\ntmpl.Collapsebar.ContainerClass = \"\"\ntmpl.Collapsebar.InitialState = \"open\"\ntmpl.languageTags_RemoveUnConsumedTags = .t.\ntmpl.activeLanguage = \"<Default>\"\ntmpl.search.highlightSearchStrings = .f.\ntmpl.autoRefreshGrid = .f.\ntmpl.autoRefreshInterval = 60\ntmpl.helpTableType = \"DBF\"\ntmpl.helpTableName = \"\"\ntmpl.helpConnectionString = \"\"\ntmpl.helpIDfield = \"\"\ntmpl.helpContentsField = \"\"\ntmpl.fieldHelpWindowStyle = \"modal-resizeable\"\ntmpl.fields = 2\nDIM tmpl.field_info[tmpl.fields] as P \nwith tmpl.field_info[1]\n\t.Fieldname = \"Id_Recorrido\"\n\t.Scope = \"Local\"\n\t.DisplayFormat = \"\"\n\t.DisplayUnFormat = \"\"\n\t.ConditionalStyle = \"\"\n\t.ConditionalStyleLevel = \"Cell\"\n\t.ClientSideConditionalStyle = \"\"\n\t.ClientSideConditionalStyleLevel = \"Cell\"\n\t.QBEDisable = .f.\n\t.QBEInlineStyle = \"\"\n\t.QBEOptionsJSON = \"\"\n\t.canBeUsedInWhereClause = .t.\n\t.autoincrement = .t.\n\t.portableType = \"Integer32\"\n\t.nativeType = \"int\"\n\t.Type = \"N\"\n\t.UserDefinedClientSideValidationJavascript = \"\"\n\t.onChange_ValidationOption = \"None\"\n\t.Varname = \"ID_RECORRIDO\"\n\t.Column.LabelPosition = \"Left\"\n\t.Controltype = \"Label\"\n\t.Label.InLineStyle = \"text-align: right;\"\n\t.Label.ClassName = \"\"\n\t.BreakType = \"None\"\n\t.nCols = 1\n\t.Column.Hide = .f.\n\t.BaseFieldExpression = \"Id_Recorrido\"\n\t.SourceAlias = \"\"\n\t.Column.Heading = \"Id Recorrido\"\n\t.Column.Sort = \"Id_Recorrido\"\n\t.Column.FirstClickDirection = \"A\"\nend with\nwith tmpl.field_info[2]\n\t.Fieldname = \"FechaSalida\"\n\t.Scope = \"Local\"\n\t.DisplayFormat = \"time(\\\"{grid.clientSideDateFormat}\\\",<value>)\"\n\t.DisplayUnFormat = \"\"\n\t.ConditionalStyle = \"\"\n\t.ConditionalStyleLevel = \"Cell\"\n\t.ClientSideConditionalStyle = \"\"\n\t.ClientSideConditionalStyleLevel = \"Cell\"\n\t.QBEDisable = .f.\n\t.QBEInlineStyle = \"\"\n\t.QBEOptionsJSON = \"\"\n\t.canBeUsedInWhereClause = .t.\n\t.autoincrement = .f.\n\t.portableType = \"Date\"\n\t.nativeType = \"Date\"\n\t.Type = \"D\"\n\t.UserDefinedClientSideValidationJavascript = \"\"\n\t.onChange_ValidationOption = \"None\"\n\t.Varname = \"FECHASALIDA\"\n\t.Column.LabelPosition = \"Left\"\n\t.Controltype = \"Label\"\n\t.Label.InLineStyle = \"\"\n\t.Label.ClassName = \"\"\n\t.BreakType = \"None\"\n\t.nCols = 1\n\t.Column.Hide = .f.\n\t.BaseFieldExpression = \"FechaSalida\"\n\t.SourceAlias = \"\"\n\t.Column.Heading = \"Fecha Salida\"\n\t.Column.Sort = \"FechaSalida\"\n\t.Column.FirstClickDirection = \"A\"\nend with\ntmpl.RecordNavigationStyle = \"NavigationButtons\"\ntmpl.fetchMoreRecordsButton.text = \"More Records\"\ntmpl.fetchMoreRecordsButton.style = \"\"\ntmpl.RecNav.SuppressIfOnlyOnePage = .t.\ntmpl.RecNav.First_Label = \"First\"\ntmpl.RecNav.Has_First_Button = .t.\ntmpl.RecNav.Has_Last_Button = .t.\ntmpl.RecNav.Has_Next_Button = .t.\ntmpl.RecNav.Has_Prev_Button = .t.\ntmpl.RecNav.HTML_Template_source = \"Computed\"\ntmpl.RecNav.Justify = \"Left\"\ntmpl.RecNav.Last_Label = \"Last\"\ntmpl.RecNav.Next_Label = \"Next\"\ntmpl.RecNav.Number_of_page_links = 10\ntmpl.RecNav.Page_Numbering_Style = 3\ntmpl.RecNav.PagesTemplate_w_PageCount = \"{PageNumber} of {PageCount}\"\ntmpl.RecNav.PagesTemplate_wout_PageCount = \"{PageNumber}\"\ntmpl.RecNav.Position = 1\ntmpl.RecNav.suppress_recNavBar_if_no_records = .f.\ntmpl.RecNav.Prev_Label = \"Prev\"\ntmpl.RecNav.Show_disabled_controls = .t.\ntmpl.RecNav.Show_Page_Count = .t.\ntmpl.RecNav.Use_Images = .f.\ntmpl.gridToolbarTemplate = <<%html%\n%html%\ntmpl.gridToolbarTemplateEditable = <<%html%\n%html%\ntmpl.ToolbarActionButtons = <<%html%\n{ActionButton:FA}\n{ActionButton:IND6}\n%html%\ntmpl.style_name = \"GrBlue\"\ntmpl.resolveAbstractClassNames = .t.\ntmpl.style_type = \"Alpha Five\"\ntmpl.UseSimpleStyles = .f.\ntmpl.overrideStylesForJavascriptObjects = .f.\ntmpl.searchBehavior = \"\"\ntmpl.GUID = \"d07b974b-6838-40fa-bb2c-29cf09ca402d\"\ntmpl.onlyIncludeSelectedFieldsInQuery = .t.\nDIM tmpl.controls[2] as P\nwith  tmpl.controls[1]\n\t.idInternal = \"163b40b9-7cb7-451e-8a20-36e34d29f0e6\"\n\t.type = \"Button\"\n\t.Name = \"FA\"\n\t.trailingSeparator = .T.\n\t.bubbleHelp = \"\"\n\t.readDataFrom = \"GridPart\"\n\t.actionJSAttribute = <<%str%\n/* actionJavascript:95e5c343-b7d0-40a7-af58-dd084546caff  */\nfunction tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f() {\nvar dropDownType = 'wait';\nvar title = 'Espere por favor';\nvar msgBody = '';\nvar width = '300px';\nvar oKButtonLabel = '';\nvar cancelButtonLabel = '';\nvar loc = 'center';\nvar onOK = function() { alert('pressed ok'); };\nvar onCancel = function() { };\n{grid.object}.dropDownMessage(dropDownType,title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel, loc);\n}\nfunction tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa() {\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiempos','','',{});\n}\nfunction tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5() {\n{grid.object}.dropDownMessageHide();\n}\nA5.executeThisThenThat(tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f,tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa,tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5);%str%\n\t.actionJSGlobal = \"\"\n\t.actionXbasic = \"\"\n\t.actionClientSideXbasic = \"\"\n\t.buttonStyle = \"Text only\"\n\t.buttonClass = \"[class.gridButton]\"\n\t.buttonClassHover = \"[class.gridButtonHover]\"\n\t.buttonClassPressed = \"[class.gridButtonPressed]\"\n\t.buttonClassDisabled = \"[class.gridButtonDisabled]\"\n\t.buttonInlineStyle = \"\"\n\t.buttonText = \"BUTTON\"\n\t.hyperlinkClass = \"[class.gridHyperlinkButton]\"\n\t.hyperlinkInlineStyle = \"\"\n\t.hyperlinkImagePosition = \"None\"\n\t.textClass = \"\"\n\t.textInlineStyle = \"\"\n\t.imageName = \"\"\n\t.hoverImageName = \"\"\n\t.pressedImageName = \"\"\n\t.disabledimageName = \"\"\n\t.imageClass = \"\"\n\t.imageInlineStyle = \"\"\n\t.securityGroups = \"\"\n\t.serverSideShowHideExpression = \"\"\n\t.readDataFromForClientSideExpns = \"GridPart\"\n\t.clientSideShowHideExpression = \"\"\n\t.clientSideEnableExpression = \"\"\n\t.precalc.watchJavascriptShowHide = \"\"\n\t.precalc.watchJavascriptEnable = \"\"\n\t.precalc.watchColumnsShowHide = \"\"\n\t.precalc.watchColumnsEnable = \"\"\n\t.precalc.JStoSetupWatchEvents = \"\"\n\t.precalc.buttonObjectJavascript = <<%str%\nwindow['{grid.componentName}_BUTTONS_FA'] = new A5.Button({\n\tlayout: 'text',\n\tclassName: '[class.gridButton]',\n\thoverClassName: '[class.gridButtonHover]',\n\tpressedClassName: '[class.gridButtonPressed]',\n\tdisabledClassName: '[class.gridButtonDisabled]',\n\thtml: 'BUTTON',\n\tonClick: function() { /* actionJavascript:95e5c343-b7d0-40a7-af58-dd084546caff  */\nfunction tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f() {\nvar dropDownType = 'wait';\nvar title = 'Espere por favor';\nvar msgBody = '';\nvar width = '300px';\nvar oKButtonLabel = '';\nvar cancelButtonLabel = '';\nvar loc = 'center';\nvar onOK = function() { alert('pressed ok'); };\nvar onCancel = function() { };\n{grid.object}.dropDownMessage(dropDownType,title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel, loc);\n}\nfunction tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa() {\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiempos','','',{});\n}\nfunction tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5() {\n{grid.object}.dropDownMessageHide();\n}\nA5.executeThisThenThat(tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f,tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa,tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5);\n},\n\ttheme: '{grid.style}'\n});%str%\n\t.precalc.objectHTML = \"<button type=\\\"button\\\" id=\\\"{id}\\\"></button>&nbsp;\"\n\t.precalc.objectName = \"{grid.componentName}_BUTTONS_FA\"\n\t.precalc.bindJS = \"{grid.componentName}_BUTTONS_FA.bind({bindIdList});\"\nend with\nwith  tmpl.controls[2]\n\t.idInternal = \"9027a34b-2401-43d0-8dd4-ef9859512f57\"\n\t.type = \"Button\"\n\t.Name = \"IND6\"\n\t.trailingSeparator = .T.\n\t.bubbleHelp = \"\"\n\t.readDataFrom = \"GridPart\"\n\t.actionJSAttribute = <<%str%\n/* actionJavascript:12671d61-5396-45b2-96d8-3437214d9f40 */\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiemposIndicador6','','',{});%str%\n\t.actionJSGlobal = \"\"\n\t.actionXbasic = \"\"\n\t.actionClientSideXbasic = \"\"\n\t.buttonStyle = \"Text only\"\n\t.buttonClass = \"[class.gridButton]\"\n\t.buttonClassHover = \"[class.gridButtonHover]\"\n\t.buttonClassPressed = \"[class.gridButtonPressed]\"\n\t.buttonClassDisabled = \"[class.gridButtonDisabled]\"\n\t.buttonInlineStyle = \"\"\n\t.buttonText = \"Ind6\"\n\t.hyperlinkClass = \"[class.gridHyperlinkButton]\"\n\t.hyperlinkInlineStyle = \"\"\n\t.hyperlinkImagePosition = \"None\"\n\t.textClass = \"\"\n\t.textInlineStyle = \"\"\n\t.imageName = \"\"\n\t.hoverImageName = \"\"\n\t.pressedImageName = \"\"\n\t.disabledimageName = \"\"\n\t.imageClass = \"\"\n\t.imageInlineStyle = \"\"\n\t.securityGroups = \"\"\n\t.serverSideShowHideExpression = \"\"\n\t.readDataFromForClientSideExpns = \"GridPart\"\n\t.clientSideShowHideExpression = \"\"\n\t.clientSideEnableExpression = \"\"\n\t.precalc.watchJavascriptShowHide = \"\"\n\t.precalc.watchJavascriptEnable = \"\"\n\t.precalc.watchColumnsShowHide = \"\"\n\t.precalc.watchColumnsEnable = \"\"\n\t.precalc.JStoSetupWatchEvents = \"\"\n\t.precalc.buttonObjectJavascript = <<%str%\nwindow['{grid.componentName}_BUTTONS_IND6'] = new A5.Button({\n\tlayout: 'text',\n\tclassName: '[class.gridButton]',\n\thoverClassName: '[class.gridButtonHover]',\n\tpressedClassName: '[class.gridButtonPressed]',\n\tdisabledClassName: '[class.gridButtonDisabled]',\n\thtml: 'Ind6',\n\tonClick: function() { /* actionJavascript:12671d61-5396-45b2-96d8-3437214d9f40 */\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiemposIndicador6','','',{});\n},\n\ttheme: '{grid.style}'\n});%str%\n\t.precalc.objectHTML = \"<button type=\\\"button\\\" id=\\\"{id}\\\"></button>&nbsp;\"\n\t.precalc.objectName = \"{grid.componentName}_BUTTONS_IND6\"\n\t.precalc.bindJS = \"{grid.componentName}_BUTTONS_IND6.bind({bindIdList});\"\nend with\ntmpl.hasGroupBreaks = .f.\ntmpl.groupBreaks.expression1 = \"\"\ntmpl.groupBreaks.direction1 = \"\"\ntmpl.groupBreaks.header1 = <<%HTML%\n%HTML%\ntmpl.groupBreaks.footer1 = <<%HTML%\n%HTML%\ntmpl.groupBreaks.collapseAllGroupsOnInitialDisplay = .f.\ntmpl.timestamp = \"2019-11-13:11-44-49.182\"\ntmpl.resolveAbstractClassNamesAtDesignTime  = .f.\ntmpl.resolveAbstractIconNamesAtDesignTime = .f. \ntmpl.useLegacyDatePicker = .f.\ntmpl.javascriptUnboundActionDefinitions = <<%javascriptActions%\n%javascriptActions%\n\ntmpl.precalc.sessionVarsInShowHideExpns = <<%sessionvars%\n%sessionvars%\ntmpl.precalc.unboundActionsXbasicFunctions = \"\"\ntmpl.precalc.includeS3Javascript = .f.",
        "datasourceType": 3,
        "componentName": "IndicadorGerenciaaaaa",
        "query_ado": {
            "mdb_or_cs": 1,
            "connection_type": 1,
            "base_on": 1,
            "Arguments": [
                {}
            ]
        },
        "query_cs": {
            "connection_type": 1,
            "connection_name": "Nibble",
            "base_on": 1,
            "table_name": "N_Recorrido",
            "table_alias": "N_Recorrido",
            "filter": "Id_TipoFlete = 6",
            "database_type": "CS",
            "surrogate_primary_key": "Id_Recorrido",
            "FieldInfo": "<a_expn<[1]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.T.>\n<identity=.T.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_Recorrido\">\n<basecolumn=\"Id_Recorrido\">\n<varname=\"Id_Recorrido\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_Recorrido\">\n<searchExpression=\"Id_Recorrido\">\n>\n<[2]<a5_type=\"Date\">\n<a5_shorttype=\"D\">\n<CS_type=\"Date\">\n<portable_type=\"Date\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=8>\n<name=\"FechaSalida\">\n<basecolumn=\"FechaSalida\">\n<varname=\"FechaSalida\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=8>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"FechaSalida\">\n<searchExpression=\"FechaSalida\">\n>\n<[3]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_Cliente\">\n<basecolumn=\"Id_Cliente\">\n<varname=\"Id_Cliente\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_Cliente\">\n<searchExpression=\"Id_Cliente\">\n>\n<[4]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_Contrato\">\n<basecolumn=\"Id_Contrato\">\n<varname=\"Id_Contrato\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_Contrato\">\n<searchExpression=\"Id_Contrato\">\n>\n<[5]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_ContratoServicio\">\n<basecolumn=\"Id_ContratoServicio\">\n<varname=\"Id_ContratoServicio\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_ContratoServicio\">\n<searchExpression=\"Id_ContratoServicio\">\n>\n<[6]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_TipoTransportacion\">\n<basecolumn=\"Id_TipoTransportacion\">\n<varname=\"Id_TipoTransportacion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_TipoTransportacion\">\n<searchExpression=\"Id_TipoTransportacion\">\n>\n<[7]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"NVARCHAR(MAX)\">\n<portable_type=\"NationalVaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"Observaciones\">\n<basecolumn=\"Observaciones\">\n<varname=\"Observaciones\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Observaciones\">\n<searchExpression=\"Observaciones\">\n>\n<[8]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_TipoFlete\">\n<basecolumn=\"Id_TipoFlete\">\n<varname=\"Id_TipoFlete\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_TipoFlete\">\n<searchExpression=\"Id_TipoFlete\">\n>\n<[9]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_EstadoRecorrido\">\n<basecolumn=\"Id_EstadoRecorrido\">\n<varname=\"Id_EstadoRecorrido\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_EstadoRecorrido\">\n<searchExpression=\"Id_EstadoRecorrido\">\n>\n<[10]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_TipoEjecucion\">\n<basecolumn=\"Id_TipoEjecucion\">\n<varname=\"Id_TipoEjecucion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_TipoEjecucion\">\n<searchExpression=\"Id_TipoEjecucion\">\n>\n<[11]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_Origen\">\n<basecolumn=\"Id_Origen\">\n<varname=\"Id_Origen\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_Origen\">\n<searchExpression=\"Id_Origen\">\n>\n<[12]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_Destino\">\n<basecolumn=\"Id_Destino\">\n<varname=\"Id_Destino\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_Destino\">\n<searchExpression=\"Id_Destino\">\n>\n<[13]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"nvarchar\">\n<portable_type=\"NationalVaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=50>\n<name=\"UsuarioCreacion\">\n<basecolumn=\"UsuarioCreacion\">\n<varname=\"UsuarioCreacion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=50>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"UsuarioCreacion\">\n<searchExpression=\"UsuarioCreacion\">\n>\n<[14]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"nvarchar\">\n<portable_type=\"NationalVaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=50>\n<name=\"UsuarioEdicion\">\n<basecolumn=\"UsuarioEdicion\">\n<varname=\"UsuarioEdicion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=50>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"UsuarioEdicion\">\n<searchExpression=\"UsuarioEdicion\">\n>\n<[15]<a5_type=\"Time\">\n<a5_shorttype=\"T\">\n<CS_type=\"datetime\">\n<portable_type=\"DateTime\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=17>\n<name=\"fechaCreacion\">\n<basecolumn=\"fechaCreacion\">\n<varname=\"fechaCreacion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=17>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"fechaCreacion\">\n<searchExpression=\"fechaCreacion\">\n>\n<[16]<a5_type=\"Time\">\n<a5_shorttype=\"T\">\n<CS_type=\"datetime\">\n<portable_type=\"DateTime\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=17>\n<name=\"fechaEdicion\">\n<basecolumn=\"fechaEdicion\">\n<varname=\"fechaEdicion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=17>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"fechaEdicion\">\n<searchExpression=\"fechaEdicion\">\n>\n<[17]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_RecorridoAnterior\">\n<basecolumn=\"Id_RecorridoAnterior\">\n<varname=\"Id_RecorridoAnterior\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_RecorridoAnterior\">\n<searchExpression=\"Id_RecorridoAnterior\">\n>\n<[18]<a5_type=\"Time\">\n<a5_shorttype=\"T\">\n<CS_type=\"datetime\">\n<portable_type=\"DateTime\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=17>\n<name=\"fechaCompletado\">\n<basecolumn=\"fechaCompletado\">\n<varname=\"fechaCompletado\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=17>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"fechaCompletado\">\n<searchExpression=\"fechaCompletado\">\n>\n<[19]<a5_type=\"Time\">\n<a5_shorttype=\"T\">\n<CS_type=\"datetime\">\n<portable_type=\"DateTime\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=17>\n<name=\"fechaTerminado\">\n<basecolumn=\"fechaTerminado\">\n<varname=\"fechaTerminado\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=17>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"fechaTerminado\">\n<searchExpression=\"fechaTerminado\">\n>\n<[20]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"estaEnviadoCorreo\">\n<basecolumn=\"estaEnviadoCorreo\">\n<varname=\"estaEnviadoCorreo\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"estaEnviadoCorreo\">\n<searchExpression=\"estaEnviadoCorreo\">\n>\n<[21]<a5_type=\"ShortTime\">\n<a5_shorttype=\"S\">\n<CS_type=\"Time\">\n<portable_type=\"Time\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=9>\n<name=\"horaSalidaEstimada\">\n<basecolumn=\"horaSalidaEstimada\">\n<varname=\"horaSalidaEstimada\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=9>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"horaSalidaEstimada\">\n<searchExpression=\"horaSalidaEstimada\">\n>\n<[22]<a5_type=\"Date\">\n<a5_shorttype=\"D\">\n<CS_type=\"Date\">\n<portable_type=\"Date\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=8>\n<name=\"FechaLlegadaEstimada\">\n<basecolumn=\"FechaLlegadaEstimada\">\n<varname=\"FechaLlegadaEstimada\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=8>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"FechaLlegadaEstimada\">\n<searchExpression=\"FechaLlegadaEstimada\">\n>\n<[23]<a5_type=\"ShortTime\">\n<a5_shorttype=\"S\">\n<CS_type=\"Time\">\n<portable_type=\"Time\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=9>\n<name=\"horaLlegadaEstimada\">\n<basecolumn=\"horaLlegadaEstimada\">\n<varname=\"horaLlegadaEstimada\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=9>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"horaLlegadaEstimada\">\n<searchExpression=\"horaLlegadaEstimada\">\n>\n<[24]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_Alcance\">\n<basecolumn=\"Id_Alcance\">\n<varname=\"Id_Alcance\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_Alcance\">\n<searchExpression=\"Id_Alcance\">\n>\n<[25]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=50>\n<name=\"referenciaCliente\">\n<basecolumn=\"referenciaCliente\">\n<varname=\"referenciaCliente\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=50>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"referenciaCliente\">\n<searchExpression=\"referenciaCliente\">\n>\n<[26]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=50>\n<name=\"numeroReferendo\">\n<basecolumn=\"numeroReferendo\">\n<varname=\"numeroReferendo\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=50>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"numeroReferendo\">\n<searchExpression=\"numeroReferendo\">\n>\n<[27]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_ContratoServicioRecorrido\">\n<basecolumn=\"Id_ContratoServicioRecorrido\">\n<varname=\"Id_ContratoServicioRecorrido\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_ContratoServicioRecorrido\">\n<searchExpression=\"Id_ContratoServicioRecorrido\">\n>\n<[28]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_PaisOrigen\">\n<basecolumn=\"Id_PaisOrigen\">\n<varname=\"Id_PaisOrigen\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_PaisOrigen\">\n<searchExpression=\"Id_PaisOrigen\">\n>\n<[29]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_PaisDestino\">\n<basecolumn=\"Id_PaisDestino\">\n<varname=\"Id_PaisDestino\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_PaisDestino\">\n<searchExpression=\"Id_PaisDestino\">\n>\n<[30]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"aprobado\">\n<basecolumn=\"aprobado\">\n<varname=\"aprobado\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"aprobado\">\n<searchExpression=\"aprobado\">\n>\n<[31]<a5_type=\"Time\">\n<a5_shorttype=\"T\">\n<CS_type=\"datetime\">\n<portable_type=\"DateTime\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=17>\n<name=\"FechaAprobacion\">\n<basecolumn=\"FechaAprobacion\">\n<varname=\"FechaAprobacion\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=17>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"FechaAprobacion\">\n<searchExpression=\"FechaAprobacion\">\n>\n<[32]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=50>\n<name=\"usuarioAprobo\">\n<basecolumn=\"usuarioAprobo\">\n<varname=\"usuarioAprobo\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=50>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"usuarioAprobo\">\n<searchExpression=\"usuarioAprobo\">\n>\n<[33]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"tieneZonaFranca\">\n<basecolumn=\"tieneZonaFranca\">\n<varname=\"tieneZonaFranca\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"tieneZonaFranca\">\n<searchExpression=\"tieneZonaFranca\">\n>\n<[34]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"envioPrefactura\">\n<basecolumn=\"envioPrefactura\">\n<varname=\"envioPrefactura\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"envioPrefactura\">\n<searchExpression=\"envioPrefactura\">\n>\n<[35]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=50>\n<name=\"usuarioEnvio\">\n<basecolumn=\"usuarioEnvio\">\n<varname=\"usuarioEnvio\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=50>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"usuarioEnvio\">\n<searchExpression=\"usuarioEnvio\">\n>\n<[36]<a5_type=\"Time\">\n<a5_shorttype=\"T\">\n<CS_type=\"datetime\">\n<portable_type=\"DateTime\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=17>\n<name=\"fechaEnvioPrefactura\">\n<basecolumn=\"fechaEnvioPrefactura\">\n<varname=\"fechaEnvioPrefactura\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=17>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"fechaEnvioPrefactura\">\n<searchExpression=\"fechaEnvioPrefactura\">\n>\n<[37]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"dashCarga\">\n<basecolumn=\"dashCarga\">\n<varname=\"dashCarga\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"dashCarga\">\n<searchExpression=\"dashCarga\">\n>\n<[38]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"dashPickUp\">\n<basecolumn=\"dashPickUp\">\n<varname=\"dashPickUp\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"dashPickUp\">\n<searchExpression=\"dashPickUp\">\n>\n<[39]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"dashValor\">\n<basecolumn=\"dashValor\">\n<varname=\"dashValor\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"dashValor\">\n<searchExpression=\"dashValor\">\n>\n<[40]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"dashTiempo\">\n<basecolumn=\"dashTiempo\">\n<varname=\"dashTiempo\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"dashTiempo\">\n<searchExpression=\"dashTiempo\">\n>\n<[41]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"dashTiempoAct\">\n<basecolumn=\"dashTiempoAct\">\n<varname=\"dashTiempoAct\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"dashTiempoAct\">\n<searchExpression=\"dashTiempoAct\">\n>\n<[42]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"float\">\n<portable_type=\"Double\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=20>\n<name=\"tiempoReal\">\n<basecolumn=\"tiempoReal\">\n<varname=\"tiempoReal\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=20>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"tiempoReal\">\n<searchExpression=\"tiempoReal\">\n>\n<[43]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"float\">\n<portable_type=\"Double\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=20>\n<name=\"tiempoEstimado\">\n<basecolumn=\"tiempoEstimado\">\n<varname=\"tiempoEstimado\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=20>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"tiempoEstimado\">\n<searchExpression=\"tiempoEstimado\">\n>\n<[44]<a5_type=\"Character\">\n<a5_shorttype=\"C\">\n<CS_type=\"varchar\">\n<portable_type=\"VaryingCharacter\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=10>\n<name=\"dashDocumento\">\n<basecolumn=\"dashDocumento\">\n<varname=\"dashDocumento\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=10>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.F.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"dashDocumento\">\n<searchExpression=\"dashDocumento\">\n>\n<[45]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"prefacturado\">\n<basecolumn=\"prefacturado\">\n<varname=\"prefacturado\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"prefacturado\">\n<searchExpression=\"prefacturado\">\n>\n<[46]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"horasExtras\">\n<basecolumn=\"horasExtras\">\n<varname=\"horasExtras\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"horasExtras\">\n<searchExpression=\"horasExtras\">\n>\n<[47]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"tieneCargaSegura\">\n<basecolumn=\"tieneCargaSegura\">\n<varname=\"tieneCargaSegura\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"tieneCargaSegura\">\n<searchExpression=\"tieneCargaSegura\">\n>\n<[48]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"diasPrefactura\">\n<basecolumn=\"diasPrefactura\">\n<varname=\"diasPrefactura\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"diasPrefactura\">\n<searchExpression=\"diasPrefactura\">\n>\n<[49]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_EstadoRecorridoPago\">\n<basecolumn=\"Id_EstadoRecorridoPago\">\n<varname=\"Id_EstadoRecorridoPago\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_EstadoRecorridoPago\">\n<searchExpression=\"Id_EstadoRecorridoPago\">\n>\n<[50]<a5_type=\"Logical\">\n<a5_shorttype=\"L\">\n<CS_type=\"bit\">\n<portable_type=\"Boolean\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=1>\n<name=\"esServicioLogistico\">\n<basecolumn=\"esServicioLogistico\">\n<varname=\"esServicioLogistico\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=1>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"esServicioLogistico\">\n<searchExpression=\"esServicioLogistico\">\n>\n<[51]<a5_type=\"Numeric\">\n<a5_shorttype=\"N\">\n<CS_type=\"int\">\n<portable_type=\"Integer32\">\n<autoincrement=.F.>\n<identity=.F.>\n<identitySequenceName=\"\">\n<definedsize=11>\n<name=\"Id_BancoPago\">\n<basecolumn=\"Id_BancoPago\">\n<varname=\"Id_BancoPago\">\n<basetable=\"N_Recorrido\">\n<alias_to_update=\"N_Recorrido\">\n<Precision=11>\n<NumericScale=0>\n<CanBeUsedInWhereClause=.T.>\n<SQLExpression=\"\">\n<basealias=\"\">\n<searchSortExpression=\"Id_BancoPago\">\n<searchExpression=\"Id_BancoPago\">\n>\n>\n",
            "SurrogatePrimaryKeyData": "<arrTables<[1]<Primary_Key=\"Id_Recorrido\">\n<Name=\"N_Recorrido\">\n<Alias=\"N_Recorrido\">\n>\n>\n",
            "SQLBuilder": {
                "ColumnAliases": "Id_Recorrido|||||||Id_Recorrido\nFechaSalida|||||||FechaSalida\nId_Cliente|||||||Id_Cliente\nId_Contrato|||||||Id_Contrato\nId_ContratoServicio|||||||Id_ContratoServicio\nId_TipoTransportacion|||||||Id_TipoTransportacion\nObservaciones|||||||Observaciones\nId_TipoFlete|||||||Id_TipoFlete\nId_EstadoRecorrido|||||||Id_EstadoRecorrido\nId_TipoEjecucion|||||||Id_TipoEjecucion\nId_Origen|||||||Id_Origen\nId_Destino|||||||Id_Destino\nUsuarioCreacion|||||||UsuarioCreacion\nUsuarioEdicion|||||||UsuarioEdicion\nfechaCreacion|||||||fechaCreacion\nfechaEdicion|||||||fechaEdicion\nId_RecorridoAnterior|||||||Id_RecorridoAnterior\nfechaCompletado|||||||fechaCompletado\nfechaTerminado|||||||fechaTerminado\nestaEnviadoCorreo|||||||estaEnviadoCorreo\nhoraSalidaEstimada|||||||horaSalidaEstimada\nFechaLlegadaEstimada|||||||FechaLlegadaEstimada\nhoraLlegadaEstimada|||||||horaLlegadaEstimada\nId_Alcance|||||||Id_Alcance\nreferenciaCliente|||||||referenciaCliente\nnumeroReferendo|||||||numeroReferendo\nId_ContratoServicioRecorrido|||||||Id_ContratoServicioRecorrido\nId_PaisOrigen|||||||Id_PaisOrigen\nId_PaisDestino|||||||Id_PaisDestino\naprobado|||||||aprobado\nFechaAprobacion|||||||FechaAprobacion\nusuarioAprobo|||||||usuarioAprobo\ntieneZonaFranca|||||||tieneZonaFranca\nenvioPrefactura|||||||envioPrefactura\nusuarioEnvio|||||||usuarioEnvio\nfechaEnvioPrefactura|||||||fechaEnvioPrefactura\ndashCarga|||||||dashCarga\ndashPickUp|||||||dashPickUp\ndashValor|||||||dashValor\ndashTiempo|||||||dashTiempo\ndashTiempoAct|||||||dashTiempoAct\ntiempoReal|||||||tiempoReal\ntiempoEstimado|||||||tiempoEstimado\ndashDocumento|||||||dashDocumento\nprefacturado|||||||prefacturado\nhorasExtras|||||||horasExtras\ntieneCargaSegura|||||||tieneCargaSegura\ndiasPrefactura|||||||diasPrefactura\nId_EstadoRecorridoPago|||||||Id_EstadoRecorridoPago\nesServicioLogistico|||||||esServicioLogistico\nId_BancoPago|||||||Id_BancoPago\n",
                "ColumnTypes": "Id_Recorrido=N\nFechaSalida=D\nId_Cliente=N\nId_Contrato=N\nId_ContratoServicio=N\nId_TipoTransportacion=N\nObservaciones=C\nId_TipoFlete=N\nId_EstadoRecorrido=N\nId_TipoEjecucion=N\nId_Origen=N\nId_Destino=N\nUsuarioCreacion=C\nUsuarioEdicion=C\nfechaCreacion=T\nfechaEdicion=T\nId_RecorridoAnterior=N\nfechaCompletado=T\nfechaTerminado=T\nestaEnviadoCorreo=L\nhoraSalidaEstimada=S\nFechaLlegadaEstimada=D\nhoraLlegadaEstimada=S\nId_Alcance=N\nreferenciaCliente=C\nnumeroReferendo=C\nId_ContratoServicioRecorrido=N\nId_PaisOrigen=N\nId_PaisDestino=N\naprobado=L\nFechaAprobacion=T\nusuarioAprobo=C\ntieneZonaFranca=L\nenvioPrefactura=L\nusuarioEnvio=C\nfechaEnvioPrefactura=T\ndashCarga=C\ndashPickUp=C\ndashValor=C\ndashTiempo=C\ndashTiempoAct=C\ntiempoReal=N\ntiempoEstimado=N\ndashDocumento=C\nprefacturado=L\nhorasExtras=N\ntieneCargaSegura=L\ndiasPrefactura=N\nId_EstadoRecorridoPago=N\nesServicioLogistico=L\nId_BancoPago=N\n",
                "ColumnNativeTypes": "Id_Recorrido=int\nFechaSalida=Date\nId_Cliente=int\nId_Contrato=int\nId_ContratoServicio=int\nId_TipoTransportacion=int\nObservaciones=NVARCHAR(MAX)\nId_TipoFlete=int\nId_EstadoRecorrido=int\nId_TipoEjecucion=int\nId_Origen=int\nId_Destino=int\nUsuarioCreacion=nvarchar\nUsuarioEdicion=nvarchar\nfechaCreacion=datetime\nfechaEdicion=datetime\nId_RecorridoAnterior=int\nfechaCompletado=datetime\nfechaTerminado=datetime\nestaEnviadoCorreo=bit\nhoraSalidaEstimada=Time\nFechaLlegadaEstimada=Date\nhoraLlegadaEstimada=Time\nId_Alcance=int\nreferenciaCliente=varchar\nnumeroReferendo=varchar\nId_ContratoServicioRecorrido=int\nId_PaisOrigen=int\nId_PaisDestino=int\naprobado=bit\nFechaAprobacion=datetime\nusuarioAprobo=varchar\ntieneZonaFranca=bit\nenvioPrefactura=bit\nusuarioEnvio=varchar\nfechaEnvioPrefactura=datetime\ndashCarga=varchar\ndashPickUp=varchar\ndashValor=varchar\ndashTiempo=varchar\ndashTiempoAct=varchar\ntiempoReal=float\ntiempoEstimado=float\ndashDocumento=varchar\nprefacturado=bit\nhorasExtras=int\ntieneCargaSegura=bit\ndiasPrefactura=int\nId_EstadoRecorridoPago=int\nesServicioLogistico=bit\nId_BancoPago=int\n",
                "ColumnPortableTypes": "Id_Recorrido=Integer32\nFechaSalida=Date\nId_Cliente=Integer32\nId_Contrato=Integer32\nId_ContratoServicio=Integer32\nId_TipoTransportacion=Integer32\nObservaciones=NationalVaryingCharacter\nId_TipoFlete=Integer32\nId_EstadoRecorrido=Integer32\nId_TipoEjecucion=Integer32\nId_Origen=Integer32\nId_Destino=Integer32\nUsuarioCreacion=NationalVaryingCharacter\nUsuarioEdicion=NationalVaryingCharacter\nfechaCreacion=DateTime\nfechaEdicion=DateTime\nId_RecorridoAnterior=Integer32\nfechaCompletado=DateTime\nfechaTerminado=DateTime\nestaEnviadoCorreo=Boolean\nhoraSalidaEstimada=Time\nFechaLlegadaEstimada=Date\nhoraLlegadaEstimada=Time\nId_Alcance=Integer32\nreferenciaCliente=VaryingCharacter\nnumeroReferendo=VaryingCharacter\nId_ContratoServicioRecorrido=Integer32\nId_PaisOrigen=Integer32\nId_PaisDestino=Integer32\naprobado=Boolean\nFechaAprobacion=DateTime\nusuarioAprobo=VaryingCharacter\ntieneZonaFranca=Boolean\nenvioPrefactura=Boolean\nusuarioEnvio=VaryingCharacter\nfechaEnvioPrefactura=DateTime\ndashCarga=VaryingCharacter\ndashPickUp=VaryingCharacter\ndashValor=VaryingCharacter\ndashTiempo=VaryingCharacter\ndashTiempoAct=VaryingCharacter\ntiempoReal=Double\ntiempoEstimado=Double\ndashDocumento=VaryingCharacter\nprefacturado=Boolean\nhorasExtras=Integer32\ntieneCargaSegura=Boolean\ndiasPrefactura=Integer32\nId_EstadoRecorridoPago=Integer32\nesServicioLogistico=Boolean\nId_BancoPago=Integer32\n",
                "AutoIncrementFields": "Id_Recorrido\n",
                "CanBeUsedInWhereClauseFields": "Id_Recorrido\nFechaSalida\nId_Cliente\nId_Contrato\nId_ContratoServicio\nId_TipoTransportacion\nId_TipoFlete\nId_EstadoRecorrido\nId_TipoEjecucion\nId_Origen\nId_Destino\nUsuarioCreacion\nUsuarioEdicion\nfechaCreacion\nfechaEdicion\nId_RecorridoAnterior\nfechaCompletado\nfechaTerminado\nestaEnviadoCorreo\nhoraSalidaEstimada\nFechaLlegadaEstimada\nhoraLlegadaEstimada\nId_Alcance\nreferenciaCliente\nnumeroReferendo\nId_ContratoServicioRecorrido\nId_PaisOrigen\nId_PaisDestino\naprobado\nFechaAprobacion\nusuarioAprobo\ntieneZonaFranca\nenvioPrefactura\nusuarioEnvio\nfechaEnvioPrefactura\ntiempoReal\ntiempoEstimado\nprefacturado\nhorasExtras\ntieneCargaSegura\ndiasPrefactura\nId_EstadoRecorridoPago\nesServicioLogistico\nId_BancoPago\n"
            },
            "Arguments": [
                {}
            ],
            "table_type": "Table",
            "primaryKeyTopAliasIsAutoIncrement_AsDefinedInTableInfo": true,
            "primaryKeyTopAliasIsAutoIncrement": true
        },
        "query_dbf": {
            "type": "Table",
            "Direction": "Ascending",
            "JoinInfo": {
                "a_tables": [
                    {}
                ]
            },
            "Arguments": [
                {}
            ]
        },
        "fields": {
            "a_fields": [
                {
                    "fieldname": "Id_Recorrido",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "onChange_ValidationOption": "None",
                    "Layout": {
                        "Title": "Tab label",
                        "TabPane": {
                            "show": true
                        },
                        "TabControl": {
                            "useModernTabs": true,
                            "Type": "Tab",
                            "TabPosition": "Top",
                            "AccordionType": "Single",
                            "InitialPane": 1,
                            "BreakType": "After",
                            "animation": {
                                "show": {
                                    "method": "Suggested",
                                    "speed": "Slow"
                                },
                                "hide": {
                                    "method": "Suggested",
                                    "speed": "Slow"
                                }
                            }
                        },
                        "FrameTitle": "Frame Label",
                        "Frame": {
                            "BreakType": "After",
                            "type": "Simple",
                            "initialState": "Shown"
                        },
                        "Container": {
                            "BreakType": "After"
                        },
                        "ButtonText": "Button",
                        "HyperlinkText": "Hyperlink",
                        "Spacer": {
                            "Horizontal": ".1in",
                            "Vertical": ".1in"
                        },
                        "nCols": 1
                    },
                    "controltype": "Label",
                    "Search": {
                        "FromLabel": "From:",
                        "ToLabel": "To:"
                    },
                    "Label": {
                        "InLineStyle": "text-align: right;",
                        "className": ""
                    },
                    "Image": {
                        "noImageFoundImage": "<None>",
                        "newRecordImage": "<None>"
                    },
                    "calendar": {
                        "DateFormat": "mm/dd/yy",
                        "SwitchYear": 20,
                        "UseComboBoxes": true,
                        "LowYear": 1950,
                        "HighYear": 2050
                    },
                    "TextBox": {
                        "InLineStyle": "text-align: right;",
                        "Size": 20,
                        "MaxLength": 20,
                        "stylefieldiferror": true,
                        "className": "",
                        "readonly": false
                    },
                    "Watermark": {
                        "text": "<FieldLabel>"
                    },
                    "clientSideFormat": {
                        "type": "Mask"
                    },
                    "TextArea": {
                        "rows": 2,
                        "cols": 20,
                        "RichText": {
                            "display": {
                                "height": "1in",
                                "width": "2in"
                            },
                            "style": "font: 9pt Arial;",
                            "editButtonText": "Edit...",
                            "toolbaricons": "",
                            "toolbardefinition": ""
                        }
                    },
                    "radiobutton": {
                        "datasource": "DBF-Table",
                        "NotInListRule": "Add to List",
                        "orientation": "Horizontal",
                        "columnFlow": "LRTB",
                        "columnCount": 3,
                        "rowCount": 3,
                        "stylefieldiferror": true,
                        "type": "Static"
                    },
                    "CheckBox": {
                        "type": "Static",
                        "datasource": "DBF-Table",
                        "stylefieldiferror": true,
                        "NotInListRule": "Add to List",
                        "orientation": "Horizontal",
                        "columnFlow": "LRTB",
                        "columnCount": 3,
                        "rowCount": 3,
                        "initial_value": "False"
                    },
                    "connection_type": "Access Database",
                    "dropdownbox": {
                        "Size": 1,
                        "type": "Static",
                        "selectStyle": "Single",
                        "datasource": "DBF-Table",
                        "stylefieldiferror": true,
                        "NotInListRule": "Add to List",
                        "fieldNameOfFieldLinkedToParentControl": "<Auto>",
                        "methodForComputingCascadingFilter": "<Auto>"
                    },
                    "DatePicker": {
                        "OpenMethod": "ClickIcon",
                        "UseComboBoxes": true,
                        "DateFormat": "<DefaultTimeFormat>",
                        "LowYear": 1950,
                        "HighYear": 2050,
                        "SwitchYear": 20,
                        "IconNumber": 2,
                        "showDaysOfWeek": true,
                        "showTodayButton": true,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "friendlyDisplay": {
                            "settingsJSON": "",
                            "enabled": false
                        },
                        "showPreDefinedDates": false,
                        "preDefinedDatesJSON": ""
                    },
                    "column": {
                        "heading": "Id Recorrido",
                        "LabelPosition": "Left",
                        "CanSort": true,
                        "sort": "Id_Recorrido",
                        "firstclickdirection": "Ascending"
                    },
                    "initial_value": "NULL",
                    "BreakType": "None",
                    "nCols": 1,
                    "link": {
                        "StaticImageInlineStyle": "border-style: none;",
                        "DisplayType": "Value in Field",
                        "Type": "Field value is link address",
                        "ajaxWindowType": "Modal-Popup",
                        "ajaxWindowTitle": "Window",
                        "ajaxWindowHeight": "3in",
                        "ajaxWindowWidth": "4in",
                        "ajaxWindowisResizable": true,
                        "ajaxWindowWorkingMessage": "Working...",
                        "ajaxWindowWorkingMessageIcon": "css/A5System/Images/wait.gif",
                        "ajaxWindowRefreshGridOnClose": "None",
                        "targetDIVHideHyperlink": "Close"
                    },
                    "BaseFieldExpression": "Id_Recorrido",
                    "type": "N",
                    "ConditionalStyleLevel": "Cell",
                    "ClientSideConditionalStyleLevel": "Cell",
                    "Updateable": true,
                    "TableAlias": "N_Recorrido",
                    "canBeUsedInWhereClause": true,
                    "nativeType": "int",
                    "autoincrement": true,
                    "table": "N_Recorrido",
                    "FieldToUpdate": "Id_Recorrido",
                    "summary": {
                        "total": {
                            "inlinestyle": "text-align: right;"
                        },
                        "count": {
                            "inlinestyle": "text-align: right;"
                        },
                        "average": {
                            "inlinestyle": "text-align: right;"
                        },
                        "min": {
                            "inlinestyle": "text-align: right;"
                        },
                        "max": {
                            "inlinestyle": "text-align: right;"
                        },
                        "StdDev": {
                            "inlinestyle": "text-align: right;"
                        },
                        "Var": {
                            "inlinestyle": "text-align: right;"
                        },
                        "First": {
                            "inlinestyle": "text-align: right;"
                        },
                        "Last": {
                            "inlinestyle": "text-align: right;"
                        }
                    },
                    "PortableType": "Integer32",
                    "width": 11,
                    "varname": "Id_Recorrido",
                    "Display": "Id_Recorrido",
                    "displayOD": "{F=Tahoma,8}{I:'a5_blue_text'}{T=.2}{C=}{DATA=Id_Recorrido}Id_Recorrido",
                    "displayODFlat": "{F=Tahoma,8}{I:'a5_blue_text'}{T=.2}{C=}{DATA=Id_Recorrido}Id_Recorrido",
                    "scope": "Local",
                    "tmplTxtComputed": true,
                    "tmplTxt": "with tmpl.field_info[_fieldNumber_]\n\t.Fieldname = \"Id_Recorrido\"\n\t.Scope = \"Local\"\n\t.DisplayFormat = \"\"\n\t.DisplayUnFormat = \"\"\n\t.ConditionalStyle = \"\"\n\t.ConditionalStyleLevel = \"Cell\"\n\t.ClientSideConditionalStyle = \"\"\n\t.ClientSideConditionalStyleLevel = \"Cell\"\n\t.QBEDisable = .f.\n\t.QBEInlineStyle = \"\"\n\t.QBEOptionsJSON = \"\"\n\t.canBeUsedInWhereClause = .t.\n\t.autoincrement = .t.\n\t.portableType = \"Integer32\"\n\t.nativeType = \"int\"\n\t.Type = \"N\"\n\t.UserDefinedClientSideValidationJavascript = \"\"\n\t.onChange_ValidationOption = \"None\"\n\t.Varname = \"ID_RECORRIDO\"\n\t.Column.LabelPosition = \"Left\"\n\t.Controltype = \"Label\"\n\t.Label.InLineStyle = \"text-align: right;\"\n\t.Label.ClassName = \"\"\n\t.BreakType = \"None\"\n\t.nCols = 1\n\t.Column.Hide = .f.\n\t.BaseFieldExpression = \"Id_Recorrido\"\n\t.SourceAlias = \"\"\n\t.Column.Heading = \"Id Recorrido\"\n\t.Column.Sort = \"Id_Recorrido\"\n\t.Column.FirstClickDirection = \"A\"\nend with\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                    "columnQBEOptionsJSON": ""
                },
                {
                    "fieldname": "FechaSalida",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "onChange_ValidationOption": "None",
                    "Layout": {
                        "Title": "Tab label",
                        "TabPane": {
                            "show": true
                        },
                        "TabControl": {
                            "useModernTabs": true,
                            "Type": "Tab",
                            "TabPosition": "Top",
                            "AccordionType": "Single",
                            "InitialPane": 1,
                            "BreakType": "After",
                            "animation": {
                                "show": {
                                    "method": "Suggested",
                                    "speed": "Slow"
                                },
                                "hide": {
                                    "method": "Suggested",
                                    "speed": "Slow"
                                }
                            }
                        },
                        "FrameTitle": "Frame Label",
                        "Frame": {
                            "BreakType": "After",
                            "type": "Simple",
                            "initialState": "Shown"
                        },
                        "Container": {
                            "BreakType": "After"
                        },
                        "ButtonText": "Button",
                        "HyperlinkText": "Hyperlink",
                        "Spacer": {
                            "Horizontal": ".1in",
                            "Vertical": ".1in"
                        },
                        "nCols": 1
                    },
                    "controltype": "Label",
                    "Search": {
                        "FromLabel": "From:",
                        "ToLabel": "To:"
                    },
                    "Label": {
                        "className": ""
                    },
                    "Image": {
                        "noImageFoundImage": "<None>",
                        "newRecordImage": "<None>"
                    },
                    "calendar": {
                        "DateFormat": "mm/dd/yy",
                        "SwitchYear": 20,
                        "UseComboBoxes": true,
                        "LowYear": 1950,
                        "HighYear": 2050
                    },
                    "TextBox": {
                        "Size": 20,
                        "MaxLength": 20,
                        "stylefieldiferror": true,
                        "className": "",
                        "readonly": false
                    },
                    "Watermark": {
                        "text": "<FieldLabel>"
                    },
                    "clientSideFormat": {
                        "type": "Mask"
                    },
                    "TextArea": {
                        "rows": 2,
                        "cols": 20,
                        "RichText": {
                            "display": {
                                "height": "1in",
                                "width": "2in"
                            },
                            "style": "font: 9pt Arial;",
                            "editButtonText": "Edit...",
                            "toolbaricons": "",
                            "toolbardefinition": ""
                        }
                    },
                    "radiobutton": {
                        "datasource": "DBF-Table",
                        "NotInListRule": "Add to List",
                        "orientation": "Horizontal",
                        "columnFlow": "LRTB",
                        "columnCount": 3,
                        "rowCount": 3,
                        "stylefieldiferror": true,
                        "type": "Static"
                    },
                    "CheckBox": {
                        "type": "Static",
                        "datasource": "DBF-Table",
                        "stylefieldiferror": true,
                        "NotInListRule": "Add to List",
                        "orientation": "Horizontal",
                        "columnFlow": "LRTB",
                        "columnCount": 3,
                        "rowCount": 3,
                        "initial_value": "False"
                    },
                    "connection_type": "Access Database",
                    "dropdownbox": {
                        "Size": 1,
                        "type": "Static",
                        "selectStyle": "Single",
                        "datasource": "DBF-Table",
                        "stylefieldiferror": true,
                        "NotInListRule": "Add to List",
                        "fieldNameOfFieldLinkedToParentControl": "<Auto>",
                        "methodForComputingCascadingFilter": "<Auto>"
                    },
                    "DatePicker": {
                        "Display": true,
                        "OpenMethod": "ClickIcon",
                        "UseComboBoxes": true,
                        "DateFormat": "<DefaultDateOnlyFormat>",
                        "LowYear": 1950,
                        "HighYear": 2050,
                        "SwitchYear": 20,
                        "IconNumber": 2,
                        "showDaysOfWeek": true,
                        "showTodayButton": true,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "friendlyDisplay": {
                            "settingsJSON": "",
                            "enabled": false
                        },
                        "showPreDefinedDates": false,
                        "preDefinedDatesJSON": ""
                    },
                    "column": {
                        "heading": "Fecha Salida",
                        "LabelPosition": "Left",
                        "CanSort": true,
                        "sort": "FechaSalida",
                        "firstclickdirection": "Ascending"
                    },
                    "initial_value": "NULL",
                    "BreakType": "None",
                    "nCols": 1,
                    "link": {
                        "StaticImageInlineStyle": "border-style: none;",
                        "DisplayType": "Value in Field",
                        "Type": "Field value is link address",
                        "ajaxWindowType": "Modal-Popup",
                        "ajaxWindowTitle": "Window",
                        "ajaxWindowHeight": "3in",
                        "ajaxWindowWidth": "4in",
                        "ajaxWindowisResizable": true,
                        "ajaxWindowWorkingMessage": "Working...",
                        "ajaxWindowWorkingMessageIcon": "css/A5System/Images/wait.gif",
                        "ajaxWindowRefreshGridOnClose": "None",
                        "targetDIVHideHyperlink": "Close"
                    },
                    "BaseFieldExpression": "FechaSalida",
                    "type": "D",
                    "DisplayFormat": "time(\"{grid.clientSideDateFormat}\",<value>)",
                    "ConditionalStyleLevel": "Cell",
                    "ClientSideConditionalStyleLevel": "Cell",
                    "Updateable": true,
                    "TableAlias": "N_Recorrido",
                    "canBeUsedInWhereClause": true,
                    "nativeType": "Date",
                    "table": "N_Recorrido",
                    "FieldToUpdate": "FechaSalida",
                    "summary": {
                        "total": {
                            "inlinestyle": "text-align: right;"
                        },
                        "count": {
                            "inlinestyle": "text-align: right;"
                        },
                        "average": {
                            "inlinestyle": "text-align: right;"
                        },
                        "min": {
                            "inlinestyle": "text-align: right;"
                        },
                        "max": {
                            "inlinestyle": "text-align: right;"
                        },
                        "StdDev": {
                            "inlinestyle": "text-align: right;"
                        },
                        "Var": {
                            "inlinestyle": "text-align: right;"
                        },
                        "First": {
                            "inlinestyle": "text-align: right;"
                        },
                        "Last": {
                            "inlinestyle": "text-align: right;"
                        }
                    },
                    "PortableType": "Date",
                    "width": 8,
                    "varname": "FechaSalida",
                    "Display": "FechaSalida",
                    "displayOD": "{F=Tahoma,8}{I:'a5_blue_text'}{T=.2}{C=}{DATA=FechaSalida}FechaSalida",
                    "displayODFlat": "{F=Tahoma,8}{I:'a5_blue_text'}{T=.2}{C=}{DATA=FechaSalida}FechaSalida",
                    "scope": "Local",
                    "tmplTxtComputed": true,
                    "tmplTxt": "with tmpl.field_info[_fieldNumber_]\n\t.Fieldname = \"FechaSalida\"\n\t.Scope = \"Local\"\n\t.DisplayFormat = \"time(\\\"{grid.clientSideDateFormat}\\\",<value>)\"\n\t.DisplayUnFormat = \"\"\n\t.ConditionalStyle = \"\"\n\t.ConditionalStyleLevel = \"Cell\"\n\t.ClientSideConditionalStyle = \"\"\n\t.ClientSideConditionalStyleLevel = \"Cell\"\n\t.QBEDisable = .f.\n\t.QBEInlineStyle = \"\"\n\t.QBEOptionsJSON = \"\"\n\t.canBeUsedInWhereClause = .t.\n\t.autoincrement = .f.\n\t.portableType = \"Date\"\n\t.nativeType = \"Date\"\n\t.Type = \"D\"\n\t.UserDefinedClientSideValidationJavascript = \"\"\n\t.onChange_ValidationOption = \"None\"\n\t.Varname = \"FECHASALIDA\"\n\t.Column.LabelPosition = \"Left\"\n\t.Controltype = \"Label\"\n\t.Label.InLineStyle = \"\"\n\t.Label.ClassName = \"\"\n\t.BreakType = \"None\"\n\t.nCols = 1\n\t.Column.Hide = .f.\n\t.BaseFieldExpression = \"FechaSalida\"\n\t.SourceAlias = \"\"\n\t.Column.Heading = \"Fecha Salida\"\n\t.Column.Sort = \"FechaSalida\"\n\t.Column.FirstClickDirection = \"A\"\nend with\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                    "columnQBEOptionsJSON": ""
                }
            ]
        },
        "field_index": 1,
        "DetailView": {
            "LayoutColumns": 1,
            "AddNewLinkLabel": "New Record",
            "SaveRecordButtonLabel": "Save",
            "DeleteRecordButtonLabel": "Delete",
            "AddRecordButtonLabel": "Add",
            "HasTitle": true,
            "Title": "Detail View ",
            "show_row_labels": true,
            "edit": {
                "Execute_Update_Commands": true,
                "allow_update": true,
                "allow_insert": true,
                "allow_delete": true,
                "validateFieldsSetting": "Dirty Fields Only",
                "updateWhichFields": "Dirty Fields Only",
                "Number_Of_Insert_Rows": 1,
                "cancel_button_text": "Cancel",
                "close_button_text": "Close",
                "save_confirm_before_submit_message": "Update record?",
                "delete_confirm_before_submit_message": "Delete record?",
                "add_confirm_before_submit_message": "Add record?",
                "check_for_write_conflicts": true,
                "write_conflict_check_type": 2,
                "save_original_values": true,
                "Delete_TargetPage": "<Self>",
                "Save_TargetPage": "<Self>",
                "Add_TargetPage": "<Self>",
                "field_error_style": {
                    "type": "Icon",
                    "icon": "images/$$generic.error.png.a5image"
                },
                "RefreshRowMethod": "AutoSelect",
                "row_errors_window_title": "Errors",
                "row_errors_window_style": "color: red; width: 6in; height: 2in;",
                "FocusAfterFullPageRefreshForInsert": "First record",
                "FocusAfterFullPageRefreshForUpdate": "Current page",
                "FocusAfterFullPageRefreshForDelete": "Current page",
                "Editable_GridRow_Options_Style": "Icons",
                "RefreshRowOnDirty": true,
                "RowEditStyle": "InitiallyEditable",
                "LazyEdit": true
            },
            "HasCloseLink": true,
            "CloseDetailViewLinkLabel": "Close",
            "CanClose": true,
            "Toolbar": {
                "Position": "Below",
                "showRecordNavigatorLinks": true
            },
            "UseSimpleStyles": true,
            "SimpleStyleMode": "LayoutOnly",
            "displayStyle": "OnPage",
            "windowDragOpacity": 75,
            "PopupWindowTitle": "Detail View",
            "PopupWindowDirection": "ltr",
            "OpenMethod": "Click a hyperlink field",
            "window": {
                "animation": {
                    "show": {
                        "method": "Fade",
                        "speed": "Slow"
                    },
                    "hide": {
                        "method": "None",
                        "speed": "Fast"
                    }
                }
            }
        },
        "detailfields": {
            "a_fields": [
                {}
            ]
        },
        "detailViewToolbar": {
            "helpButtonIcon": "images/$$generic.help.png.a5image",
            "helpButtonBubbleHelp": "Open help window."
        },
        "search": {
            "HTML_Template_source": "Computed",
            "title": "Search ",
            "title_when_hidden": "Click here to search...",
            "show_title": true,
            "search_button_label": "Search",
            "form_method": "Get",
            "include_sorting_listbox": true,
            "sorting_listbox_label_position": "Left",
            "sort": {
                "prompt": "Sort&nbsp;by",
                "listbox": {
                    "fieldname_prompt": "Select Field",
                    "order_prompt": "Select Order",
                    "order_choices": "Ascending,Descending"
                }
            },
            "include_records_per_page_listbox": true,
            "records_per_page_label_position": "Left",
            "records_per_page": {
                "prompt": "Records&nbsp;per&nbsp;page",
                "listbox": {
                    "value_prompt": "Select Value",
                    "choices": "1,2,5,10,25,50,75,100"
                }
            },
            "orientation": "Vertical",
            "combine_criteria_using": 1,
            "style": 2,
            "allow_qbf_style": true,
            "keyword_label": "Search for?",
            "has_Clear_link": true,
            "Clear_link_Label": "Clear Search Criteria",
            "Clear_link_BubbleHelp": "Clear Search",
            "TargetPage": "<Self>",
            "InitialState": "Open",
            "embedInGridPosition": "Above Titles",
            "embedded": {
                "hasFreeformLayout": true,
                "showHideEmbeddedSearchIcon": "images/$$filter.png.a5image",
                "showHideEmbeddedSearchBubbleHelp": "Show/hide the Search Part",
                "showSearchIconsInRowSelector": true,
                "searchIconBubbleHelp": "Search for records",
                "clearSearchIconBubbleHelp": "Clear search criteria",
                "searchIcon": "images/$$filter.records.png.a5image",
                "clearSearchIcon": "images/$$filter.clear.png.a5image"
            },
            "embeddedStyle": "Free-form region for each column",
            "toolbarPosition": "Below",
            "savedSearches": {
                "loadSearchPrompt": "Saved search to load:",
                "saveSearchPrompt": "Name:",
                "listboxHeading": "Existing Saved Searches",
                "promptToLoadChoices": "Click to load choices...",
                "loadButtonLabel": "Load",
                "saveButtonLabel": "Save",
                "cancelButtonLabel": "Cancel",
                "listBoxHeight": "1in",
                "dialogWidth": "2in",
                "executeSearchOnLoad": true,
                "saveSearchBubbleHelp": "Save search criteria",
                "loadSearchBubbleHelp": "Load search criteria",
                "warningBlankName": "You have not specifed a name.",
                "warningDuplicateName": "Search not saved. Please specify a unique name."
            }
        },
        "searchToolbar": {
            "helpButtonIcon": "images/$$generic.help.png.a5image",
            "helpButtonBubbleHelp": "Open help window."
        },
        "searchFields": {
            "a_fields": [
                {}
            ]
        },
        "searchField_index": 1,
        "events": {
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "eventIndex": 1,
        "activeLanguage": "<Default>",
        "LayoutColumns": 1,
        "DetailLayoutColumns": 1,
        "style_name": "GrBlue",
        "PreCalcMode": "Standard",
        "FontSize": "Medium",
        "style_type": "Alpha Five",
        "useCompactTheme": true,
        "showPulseEffect": true,
        "overrideStyleName": "Default",
        "resolveAbstractClassNames": true,
        "odd_band_size": 1,
        "even_band_size": 1,
        "odd_column_band_size": 1,
        "even_column_band_size": 1,
        "rows": 10,
        "maxRowsPerPage": 200,
        "rowsWhenSearchActive": -1,
        "suppress_empty_rows": true,
        "has_row_separator": true,
        "show_column_titles": 1,
        "show_row_labels": true,
        "sort_style": 3,
        "reset_page_number_when_sorting": true,
        "RepeatingColumns": 1,
        "snaking": "TBLR",
        "total_records_row_position": 1,
        "total_records_row": "Records:&nbsp; {Total_Records}&nbsp;",
        "grid_layout_style": 1,
        "grid_layout_template_computation_method": "Automatic",
        "No_records_message": "No records in query",
        "Show_Add_Records_Confirmation_Message": true,
        "summary": {
            "total": {
                "label": "Total",
                "LblInlineStyle": "text-align: right;"
            },
            "count": {
                "label": "Count",
                "LblInlineStyle": "text-align: right;"
            },
            "average": {
                "label": "Average",
                "LblInlineStyle": "text-align: right;"
            },
            "min": {
                "label": "Minimum",
                "LblInlineStyle": "text-align: right;"
            },
            "max": {
                "label": "Maximum",
                "LblInlineStyle": "text-align: right;"
            },
            "StdDev": {
                "label": "Std. Dev.",
                "LblInlineStyle": "text-align: right;"
            },
            "Var": {
                "label": "Variance",
                "LblInlineStyle": "text-align: right;"
            },
            "First": {
                "label": "First",
                "LblInlineStyle": "text-align: right;"
            },
            "Last": {
                "label": "Last",
                "LblInlineStyle": "text-align: right;"
            },
            "RowOrder": "Total,Count,Average,Min,Max,StdDev,Var,First,Last",
            "ShowOnLastPageOnly": true,
            "repeatColumnHeadingAboveSummaryValues": false
        },
        "NewRecordsTitle": "<tr><td class=\"[class.gridData]\" colspan=\"{a5_colspan}\" style=\"padding: 0px;\" >New Records</td></tr>",
        "ExistingRecordsTitle": "<tr><td class=\"[class.gridData]\" colspan=\"{a5_colspan}\" style=\"padding: 0px;\" >Existing Records</td></tr>",
        "row_separator": "<tr><td class=\"{a5_style}SeparatorTD\" colspan=\"{a5_colspan}\" style=\"padding: 0px;\" ></td></tr>",
        "highlight_row_onHover": true,
        "highlight_row_onSelect": true,
        "hasRecordsPerPageSelector": true,
        "RecordsPerPageChoices": "1,2,5,10,25,50,75,100",
        "RecordsPerPageSelectorTemplate": "&nbsp;&nbsp;{Grid.RecordsPerPageSelector} Records per page",
        "alphabet_button": {
            "style": "Hyperlink",
            "has_ALL_option": true,
            "ALL_Label": "All",
            "alignment": "Left",
            "SearchBarType": "Alphabet Buttons"
        },
        "XbasicFunctionDeclarations": "function paraTiempos as c (e as p)\n\t'DIM a connection variable\n\tdim args as sql::Arguments\n\tdim sqlStatement as c\n\tDIM cn as SQL::Connection\n\tdim flagResult as l \n\t\n\tdim tiempo as n\n\tdim tiempoDiferencial as n\n\tdim tiempoTotal as n\n\tdim rs as sql::resultset\n\t\n\tdim dias as n\n\tdim horas as n\n\tdim valor as n\n\tdim fechaInicio as d\n\tdim fechaUltima as d\n\tdim horaDesde as t\n\tdim horaHAsta as t\t\n\t\n\tdim totalTiempoReal as n\n\tdim totalTiempoEstimado as n\n\t\n\tdim sqlStatement2 as c \n\tdim cantViajes as n\n\tdim cantViajesOK as n\n\tdim cantViajesMAL as n\n\n\tdim paraCalculo as n\n\tdim valorMaximo as n\n\tdim valorMinimo as n\n\tdim Id_Recorrido as n\n\t\n\tdim args3 as sql::Arguments\n\t\t\n\tflagResult = cn.open(\"::Name::Nibble\")\n\tif flagResult = .f. then \n\t\tui_msg_box(\"Error\",\"Could not connect to database. Error reported was: \" + crlf() + cn.CallResult.text)\n\t\tparaTiempos = \"alert('Error de conexion a la BD.')\"\n\t\tend \n\tend if\n\t\n'Aqui estoy analizando enero\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-01-01') AND (RecMedTranspRepAct.Fecha <= '2019-01-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Enero = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\n\t\t\t\n\n'Aqui estoy analizando febrero\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-02-01') AND (RecMedTranspRepAct.Fecha <= '2019-02-28') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Febrero = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar febrero\t\n\n\n'Aqui estoy analizando marzo\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-03-01') AND (RecMedTranspRepAct.Fecha <= '2019-03-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\t \n\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Marzo = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar marzo\t\t\n\n'Aqui estoy analizando abril\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-04-01') AND (RecMedTranspRepAct.Fecha <= '2019-04-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Abril = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar abril\t\t\t\n\n\n'Aqui estoy analizando mayo\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-05-01') AND (RecMedTranspRepAct.Fecha <= '2019-05-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\t \n\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Mayo = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar mayo\t\n\n'Aqui estoy analizando junio\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-06-01') AND (RecMedTranspRepAct.Fecha <= '2019-06-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\t \n\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Junio = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar junio\t\t\n\n'Aqui estoy analizando julio\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-07-01') AND (RecMedTranspRepAct.Fecha <= '2019-07-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\n\t\t\t \n\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Julio = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar julio\t\n\n'Aqui estoy analizando agosto\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-08-01') AND (RecMedTranspRepAct.Fecha <= '2019-08-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Agosto = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar agosto\t\n\n'Aqui estoy analizando septiembre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-09-01') AND (RecMedTranspRepAct.Fecha <= '2019-09-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Septiembre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar septiembre\t\n\n'Aqui estoy analizando octubre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-10-01') AND (RecMedTranspRepAct.Fecha <= '2019-10-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Octubre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar octubre\n\n'Aqui estoy analizando noviembre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-11-01') AND (RecMedTranspRepAct.Fecha <= '2019-11-30') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Noviembre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar noviembre\n\n'Aqui estoy analizando diciembre\n\tcantViajesOK = 0\n\tcantViajes = 0\n\tsqlStatement = <<%sql%\n\t\tSELECT  RecMedTranspRepAct.Id_Recorrido\n\t\tFROM    RecMedTranspRepAct INNER JOIN\n                N_Recorrido ON RecMedTranspRepAct.Id_Recorrido = dbo.N_Recorrido.Id_Recorrido\n\t\tWHERE   (RecMedTranspRepAct.Fecha >= '2019-12-01') AND (RecMedTranspRepAct.Fecha <= '2019-12-31') \n\t\t\t\tAND (N_Recorrido.Id_TipoFlete = 6)\n\t\tGROUP BY RecMedTranspRepAct.Id_Recorrido \n\t\tORDER BY RecMedTranspRepAct.Id_Recorrido DESC\n\t%sql%\n\t'Execute the Query\n\t'flagResult = \n\tcn.Execute(sqlStatement)\n\tdim rs5 as sql::resultset\n\trs5 = cn.ResultSet\t\n\t\n\targs.Add(\"id_recorrido\", 0)\n\t\n\t\n\tdim rs2 as sql::resultset\n\trs2 = cn.ResultSet\t \n\t\nwhile rs5.NextRow()\n\t\t\tparaCalculo = 0\n\t\t \ttiempoTotal = 0\n\t\t \ttotalTiempoReal = 0\n\t\t \ttotalTiempoEstimado = 0\n\t\t \t\n\t\t\tcantViajes = cantViajes + 1\n\t\t\tId_Recorrido = rs5.Data(1)\n\t\t\targs.Set(\"id_recorrido\", Id_Recorrido)\t\t\t\t\n\t\t\t\n\t\t\tsqlStatement2 = <<%sql%\n\t\t\tSELECT Tiempo, TiempoDiferencial from RecMedTransp \n\t\t\tWHERE Id_Recorrido = :id_recorrido\n\t\t\t%sql%\n\t\t\t'Execute the Query\n\t\t\tflagResult = cn.Execute(sqlStatement2,args)\n\t\t\tif flagResult = .f. then \n\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\tcn.close()\n\t\t\t\tend \n\t\t\tend if \n\t\t\t\n\t\t\trs2 = cn.ResultSet\t\t\t\n\t\t\t\n\t\t\twhile rs2.NextRow()\n\t\t\t\ttiempo = rs2.Data(1)\n\t\t\t\ttiempoDiferencial = rs2.Data(2)\t\n\t\t\t\ttiempoTotal = tiempo + tiempoDiferencial + tiempoTotal\n\t\t\tend while\t\t\t\n\t\t\t\n\t\t\tif tiempoTotal > 0 then\n\t\t\t\ttotalTiempoEstimado = alltrim(str( convert_type(tiempoTotal,\"N\") ,250,2,\",\"))\n\t\t\t\telse\n\t\t\t\ttotalTiempoEstimado = 0\n\t\t\tend if\t\n\t\t\t\n\t\t\tif totalTiempoEstimado > 0 then\t\n\t\t\t\t\n\t\t\t\t\tsqlStatement = <<%sql%\n\t\t\t\t\tSELECT Fecha, FechaHasta, HoraDesde, HoraHasta  FROM RecMedTranspRepAct \n\t\t\t\t\tWHERE Id_Recorrido = :id_recorrido AND Fecha IS NOT NULL AND FechaHasta IS NOT NULL\n\t\t\t\t\tAND Id_Actividad <> 10 AND Id_Actividad <> 31\n\t\t\t\t\tORDER BY Fecha, HoraDesde, HoraHasta, FechaHasta, Id_RecMedTranspRepAct\n\t\t\t\t\t%sql%\n\t\t\t\t\t'Execute the Query\n\t\t\t\t\tflagResult = cn.Execute(sqlStatement,args)\n\t\t\t\t\tif flagResult = .f. then \n\t\t\t\t\t\tui_msg_box(\"Error\",cn.CallResult.text)\n\t\t\t\t\t\tcn.close()\n\t\t\t\t\t\tend \n\t\t\t\t\tend if \t\t\t\n\t\t\t\t\t\n\t\t\t\t\trs = cn.ResultSet\t\t\n\t\t\t\n\t\t\t\t\tif rs.NextRow() then\n\t\t\t\t\t\thoraDesde = rs.Data(3)\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\t\tfechaInicio = rs.Data(1)\n\t\t\t\t\tend if\n\t\t\t\t\t\n\t\t\t\t\twhile rs.NextRow()\n\t\t\t\t\t\tfechaUltima = rs.Data(2)\n\t\t\t\t\t\thoraHAsta = rs.Data(4)\n\t\t\t\t\tend while\t\t\t\n\t\t\t\t\t \n\t\t\t\t\tdias = fechaUltima - fechaInicio\t\t\t\n\t\t\t\t\thoras = *hours_between(horaHAsta, horaDesde)\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif horas >= 0 then\n\t\t\t\t\t\thoras = horas/24\n\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tdias = dias - 1 \n\t\t\t\t\t\t\thoras = 1 - (horas/24)\n\t\t\t\t\t\t\tvalor = dias + horas \n\t\t\t\t\tend if\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif valor > 0 then\n\t\t\t\t\t\ttotalTiempoReal = alltrim(str( convert_type(valor,\"N\") ,250,2,\",\"))\n\t\t\t\t\t\telse \n\t\t\t\t\t\ttotalTiempoReal = 0\n\t\t\t\t\tend if\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif totalTiempoReal > 0 then\n\t\t\t\t\t\tif totalTiempoEstimado > 0 then\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tparaCalculo = (totalTiempoEstimado / totalTiempoReal) * 100\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif paraCalculo >= 90 .AND. paraCalculo <= 110 then\n\t\t\t\t\t\t\t\tcantViajesOK = cantViajesOK + 1\n\t\t\t\t\t\t\tend if\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcantViajesMAL = cantViajesMAL + 1\n\t\t\t\t\t\tend if\n\t\t\t\t\tend if\t\n\t\t\t\n\t\t\tend if\nend while\n\n\t\t\tdim sql as c\n\t\t\tsql = <<%sql%\n\t\t\t\tUPDATE Objetivo_Proceso\n\t\t\t\tSET Diciembre = :Mes\n\t\t\t\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n\t\t\t%sql%\n\t\t\t\n\t\t\targs3.Add(\"Mes\", round_up((cantViajesOK/cantViajes)*100, 2))\n\t\t\tcn.Execute(sql, args3)\t\t\t\n'aqui termino de analizar diciembre\ncn.close()\n\nparaTiempos = \"\"\nend function\n\nfunction paraTiemposIndicador6 as c (e as p)\n\t\n\tdim sqlStatement as c\n\tdim sqlStatement2 as c\n\tDIM cn as SQL::Connection\n\tdim flagResult as l \n\t\n\tflagResult = cn.open(\"::Name::Nibble\")\n\tif flagResult = .f. then \n\t\tui_msg_box(\"Error\",\"Could not connect to database. Error reported was: \" + crlf() + cn.CallResult.text)\n\t\tparaTiempos = \"alert('Error de conexion a la BD.')\"\n\t\tend \n\tend if\n\t\n\tdim args as sql::Arguments\n\targs.Add(\"FechaInicial\", \"\")\n\targs.Add(\"FechaFinal\", \"\")\n\t\n\tdim args3 as sql::Arguments\n\t\nsqlStatement = <<%txt%\nSELECT       RecMedTransp.Id_MedioTransportacion\nFROM            N_Recorrido LEFT OUTER JOIN\n                 View_RecorridoUltimoRecMedTransp ON N_Recorrido.Id_Recorrido = View_RecorridoUltimoRecMedTransp.Id_Recorrido LEFT OUTER JOIN\n                 RecMedTranspRepAct ON N_Recorrido.Id_Recorrido = RecMedTranspRepAct.Id_Recorrido INNER JOIN\n                 RecMedTransp ON View_RecorridoUltimoRecMedTransp.Id_RecMedTransp = RecMedTransp.Id_RecMedTransp INNER JOIN\n                       N_MediosTransportacion ON RecMedTransp.Id_MedioTransportacion = N_MediosTransportacion.Id_MedioTransportacion\nWHERE        (RecMedTranspRepAct.Fecha >= :FechaInicial) AND (RecMedTranspRepAct.Fecha <= :FechaFinal) AND (N_Recorrido.Id_TipoEjecucion = 1)\nGROUP BY RecMedTransp.Id_MedioTransportacion\n%txt%\n\n'aqui estoy buscando el segundo parametro de la primera semana\n\nsqlStatement2 = <<%txt%\nSELECT  RecMedTransp.Id_MedioTransportacion\nFROM    N_Recorrido LEFT OUTER JOIN\n        View_RecorridoUltimoRecMedTransp ON N_Recorrido.Id_Recorrido = View_RecorridoUltimoRecMedTransp.Id_Recorrido \n        LEFT OUTER JOIN RecMedTranspRepAct ON N_Recorrido.Id_Recorrido = RecMedTranspRepAct.Id_Recorrido INNER JOIN\n        RecMedTransp ON View_RecorridoUltimoRecMedTransp.Id_RecMedTransp = RecMedTransp.Id_RecMedTransp INNER JOIN\n        N_MediosTransportacion ON RecMedTransp.Id_MedioTransportacion = N_MediosTransportacion.Id_MedioTransportacion\nWHERE   (RecMedTranspRepAct.Fecha >= :FechaInicial) AND (RecMedTranspRepAct.Fecha <= :FechaFinal) \n\t\tAND (RecMedTranspRepAct.Id_Actividad IN (11, 14, 28, 55, 56, 84, 87, 89, 90, 92, 107, 109, 110, 120, 144, 170, 171, 180, 181, 192, 202, 204)) \n        AND (N_Recorrido.Id_TipoEjecucion = 1)\nGROUP BY RecMedTransp.Id_MedioTransportacion\n%txt%\n\n'*** NOVIEMBRE ***\n\n'***SEMANA 1 ***\nargs.Add(\"FechaInicial\", \"2019-10-29\")\nargs.Add(\"FechaFinal\", \"2019-11-07\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\ncantidadSemana1 = 0\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\ncantidadPar2Semana1 = 0\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'*** SEMANA 2 ***\nargs.Add(\"FechaInicial\", \"2019-11-08\")\nargs.Add(\"FechaFinal\", \"2019-11-14\")\n\ncn.Execute(sqlStatement, args)\ndim rs1 as sql::resultset\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\ndim rs2 as sql::resultset\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'*** SEMANA 3 ***\n\nargs.Add(\"FechaInicial\", \"2019-11-15\")\nargs.Add(\"FechaFinal\", \"2019-11-21\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'*** SEMANA 4 ***\nargs.Add(\"FechaInicial\", \"2019-11-22\")\nargs.Add(\"FechaFinal\", \"2019-11-28\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\nvalorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n\nsql = <<%sql%\n\tUPDATE Objetivo_Proceso\n\tSET Noviembre = :Mes\n\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n%sql%\n \nargs3.Add(\"Mes\", round_up(valorIndicador6, 2))\ncn.Execute(sql, args3)\n'*** AQUI TERMINO NOVIEMBRE ***'\n\n'*** OCTUBRE ***\n\nargs.Add(\"FechaInicial\", \"2019-09-29\")\nargs.Add(\"FechaFinal\", \"2019-10-07\")\n\ncn.Execute(sqlStatement, args)\ndim rs1 as sql::resultset\nrs1 = cn.ResultSet\t\n\ndim cantidadSemana1 as n\ncantidadSemana1 = 0\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\ndim rs2 as sql::resultset\nrs2 = cn.ResultSet\n\t\ndim cantidadPar2Semana1 as n\ncantidadPar2Semana1 = 0\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n\nargs.Add(\"FechaInicial\", \"2019-10-08\")\nargs.Add(\"FechaFinal\", \"2019-10-14\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'octubre semana 3\nargs.Add(\"FechaInicial\", \"2019-10-15\")\nargs.Add(\"FechaFinal\", \"2019-10-21\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'octubre semana 4\nargs.Add(\"FechaInicial\", \"2019-10-22\")\nargs.Add(\"FechaFinal\", \"2019-10-28\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\nvalorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n\ndim sql as c\nsql = <<%sql%\n\tUPDATE Objetivo_Proceso\n\tSET Octubre = :Mes\n\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n%sql%\n \nargs3.Add(\"Mes\", round_up(valorIndicador6, 2))\ncn.Execute(sql, args3)\n'*** TERMINO OCTUBRE *** '\n\n'*** SEPTIEMBRE ***\n\n'***SEMANA 1 ***\nargs.Add(\"FechaInicial\", \"2019-08-29\")\nargs.Add(\"FechaFinal\", \"2019-09-07\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\ncantidadSemana1 = 0\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\ncantidadPar2Semana1 = 0\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'*** SEMANA 2 ***\nargs.Add(\"FechaInicial\", \"2019-09-08\")\nargs.Add(\"FechaFinal\", \"2019-09-14\")\n\ncn.Execute(sqlStatement, args)\ndim rs1 as sql::resultset\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\ndim rs2 as sql::resultset\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'*** SEMANA 3 ***\n\nargs.Add(\"FechaInicial\", \"2019-09-15\")\nargs.Add(\"FechaFinal\", \"2019-09-21\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n'*** SEMANA 4 ***\nargs.Add(\"FechaInicial\", \"2019-09-22\")\nargs.Add(\"FechaFinal\", \"2019-09-28\")\n\ncn.Execute(sqlStatement, args)\nrs1 = cn.ResultSet\t\n\nwhile rs1.NextRow()\n\tcantidadSemana1 = cantidadSemana1 + 1\nend while\n\ncn.Execute(sqlStatement2, args)\nrs2 = cn.ResultSet\n\t\nwhile rs2.NextRow()\n\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\nend while\n\n\nvalorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n\nsql = <<%sql%\n\tUPDATE Objetivo_Proceso\n\tSET Septiembre = :Mes\n\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n%sql%\n \nargs3.Add(\"Mes\", round_up(valorIndicador6, 2))\ncn.Execute(sql, args3)\n\n'*** AQUI TERMINO SEPTIEMBRE\n\n''*** AGOSTO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-07-29\")\n'args.Add(\"FechaFinal\", \"2019-08-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-08-08\")\n'args.Add(\"FechaFinal\", \"2019-08-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-08-15\")\n'args.Add(\"FechaFinal\", \"2019-08-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-08-22\")\n'args.Add(\"FechaFinal\", \"2019-08-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Agosto = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO AGOSTO ***'\n\n\n''*** JULIO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-06-29\")\n'args.Add(\"FechaFinal\", \"2019-07-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-07-08\")\n'args.Add(\"FechaFinal\", \"2019-07-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-07-15\")\n'args.Add(\"FechaFinal\", \"2019-07-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-07-22\")\n'args.Add(\"FechaFinal\", \"2019-07-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Julio = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO JULIO ***\n\n''*** JUNIO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-05-29\")\n'args.Add(\"FechaFinal\", \"2019-06-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-06-08\")\n'args.Add(\"FechaFinal\", \"2019-06-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-06-15\")\n'args.Add(\"FechaFinal\", \"2019-06-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-06-22\")\n'args.Add(\"FechaFinal\", \"2019-06-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Junio = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** MAYO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-04-29\")\n'args.Add(\"FechaFinal\", \"2019-05-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-05-08\")\n'args.Add(\"FechaFinal\", \"2019-05-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-05-15\")\n'args.Add(\"FechaFinal\", \"2019-05-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-05-22\")\n'args.Add(\"FechaFinal\", \"2019-05-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Mayo = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** AQUI TERMINO MAYO ***'\n'\n''*** ABRIL ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-03-29\")\n'args.Add(\"FechaFinal\", \"2019-04-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-04-08\")\n'args.Add(\"FechaFinal\", \"2019-04-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-04-15\")\n'args.Add(\"FechaFinal\", \"2019-04-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-04-22\")\n'args.Add(\"FechaFinal\", \"2019-04-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Abril = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO ABRIL ***'\n'\n''*** MARZO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-03-01\")\n'args.Add(\"FechaFinal\", \"2019-03-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-03-08\")\n'args.Add(\"FechaFinal\", \"2019-03-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-03-15\")\n'args.Add(\"FechaFinal\", \"2019-03-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-03-22\")\n'args.Add(\"FechaFinal\", \"2019-03-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Marzo = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n''*** AQUI TERMINO MARZO ***'\n'\n''*** FEBRERO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-01-29\")\n'args.Add(\"FechaFinal\", \"2019-02-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-02-08\")\n'args.Add(\"FechaFinal\", \"2019-02-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-02-15\")\n'args.Add(\"FechaFinal\", \"2019-02-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-02-22\")\n'args.Add(\"FechaFinal\", \"2019-02-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Febrero = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** AQUI TERMINO FEBRERO ***'\n'\n''*** ENERO ***\n'\n''***SEMANA 1 ***\n'args.Add(\"FechaInicial\", \"2019-01-01\")\n'args.Add(\"FechaFinal\", \"2019-01-07\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'cantidadSemana1 = 0\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'cantidadPar2Semana1 = 0\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 2 ***\n'args.Add(\"FechaInicial\", \"2019-01-08\")\n'args.Add(\"FechaFinal\", \"2019-01-14\")\n'\n'cn.Execute(sqlStatement, args)\n'dim rs1 as sql::resultset\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'dim rs2 as sql::resultset\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 3 ***\n'\n'args.Add(\"FechaInicial\", \"2019-01-15\")\n'args.Add(\"FechaFinal\", \"2019-01-21\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n''*** SEMANA 4 ***\n'args.Add(\"FechaInicial\", \"2019-01-22\")\n'args.Add(\"FechaFinal\", \"2019-01-28\")\n'\n'cn.Execute(sqlStatement, args)\n'rs1 = cn.ResultSet\t\n'\n'while rs1.NextRow()\n'\tcantidadSemana1 = cantidadSemana1 + 1\n'end while\n'\n'cn.Execute(sqlStatement2, args)\n'rs2 = cn.ResultSet\n'\t\n'while rs2.NextRow()\n'\tcantidadPar2Semana1 = cantidadPar2Semana1 + 1\n'end while\n'\n'valorIndicador6 = (cantidadPar2Semana1 / cantidadSemana1) * 100\n'\n'sql = <<%sql%\n'\tUPDATE Objetivo_Proceso\n'\tSET Enero = :Mes\n'\tWHERE Id_ObjetivoAno = 1 AND NoObjetivo = 6\n'%sql%\n' \n'args3.Add(\"Mes\", round_up(valorIndicador6, 2))\n'cn.Execute(sql, args3)\n'\n''*** AQUI TERMINO ENERO***'\n\nend function\n\n",
        "has_advancedSearch": false,
        "advancedSearch_jsondefinition": "",
        "qbe": {
            "menu_internationalization": "None",
            "initial_display": "Hidden",
            "toggleQBERowHyperlinkText": "Show/Hide QBE Row"
        },
        "SimpleStyleMode": "FieldsOnly",
        "RowExpand": {
            "ExpandMethod": "Click icon",
            "Type": "LinkedContent",
            "WorkingMessage": "<div style=\"width: 4in; height: .5in\">\n\t<img src=\"css/A5System/Images/wait.gif\" /> Working...\n</div> \n",
            "Mode": "Multiple"
        },
        "linkedContent": {
            "lockWindowText": "<div style=\"padding: 5pt;\"><img style=\"vertical-align:middle;\" src=\"css/A5System/Images/wait.gif\" /> Please wait...</div>",
            "lockWindowClassName": "A5WindowLock"
        },
        "hasSelectedRowColumn": true,
        "CheckboxSelectType": "SinglePage",
        "MasterTemplateStyle": "Table - Vertical Layout",
        "MasterLayout": {
            "PaneLabel": {
                "Search": "Search",
                "Grid": "Grid",
                "DetailView": "Detail"
            },
            "AccordionStyle": "Multiple",
            "InitialOpenPanes": "Search,Grid,DetailView"
        },
        "verticalAlignDataInColumns": "Middle",
        "CollapseBar": {
            "Title": "Collapse Grid",
            "InitialState": "open"
        },
        "honorDBFFieldRules": true,
        "languageTags_RemoveUnConsumedTags": true,
        "onlyIncludeSelectedFieldsInQuery": true,
        "flagAddPKToORDER": true,
        "saveFileType": "Formatted JSON",
        "captureJSErrorStackTrace": false,
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "friendlydatesCustomizationJSON": "",
        "ToolbarActionButtons": "{ActionButton:FA}\n{ActionButton:IND6}\n\n",
        "gridToolbar": {
            "ExportButtonIcon": "images/$$application.ms.excel.png.a5image",
            "ExportButtonHelp": "Export data in Grid to Excel",
            "ExportButtonFormat": "Excel-XLSX",
            "ExportButtonMaxRows": "10000",
            "exportHiddenColumns": true,
            "exportUseColumnHeadings": true,
            "helpButtonIcon": "images/$$generic.help.png.a5image",
            "helpButtonBubbleHelp": "Open help window."
        },
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "autoRefreshInterval": 60,
        "genericDataStoreTableType": "DBF",
        "RecordNavigationStyle": "NavigationButtons",
        "fetchMoreRecordsButton": {
            "text": "More Records"
        },
        "namedLayout": {
            "selectorPosition": "AboveGrid"
        },
        "scrollableRegionHeight": "2in",
        "scrollableRegionWidth": "100%",
        "defaultColumnWidth": "1in",
        "RecNav": {
            "HTML_Template_source": "Computed",
            "Position": 1,
            "Show_disabled_controls": true,
            "Show_Page_Count": true,
            "Page_Numbering_Style": 3,
            "PagesTemplate_w_PageCount": "{PageNumber} of {PageCount}",
            "PagesTemplate_wout_PageCount": "{PageNumber}",
            "Has_First_Button": true,
            "Has_Prev_Button": true,
            "Has_Next_Button": true,
            "Has_Last_Button": true,
            "Number_of_page_links": 10,
            "First_Label": "First",
            "Prev_Label": "Prev",
            "Next_Label": "Next",
            "Last_Label": "Last",
            "Justify": "Left",
            "SuppressIfOnlyOnePage": true,
            "First_on_Image_name": "{css_path_reference}/{a5_style}/FirstOn.png",
            "First_off_Image_name": "{css_path_reference}/{a5_style}/FirstOff.png",
            "Prev_on_Image_name": "{css_path_reference}/{a5_style}/PrevOn.png",
            "Prev_off_Image_name": "{css_path_reference}/{a5_style}/PrevOff.png",
            "Next_on_Image_name": "{css_path_reference}/{a5_style}/NextOn.png",
            "Next_off_Image_name": "{css_path_reference}/{a5_style}/NextOff.png",
            "Last_on_Image_name": "{css_path_reference}/{a5_style}/LastOn.png",
            "Last_off_Image_name": "{css_path_reference}/{a5_style}/LastOff.png"
        },
        "edit": {
            "Execute_Update_Commands": true,
            "allow_update": true,
            "allow_insert": true,
            "number_of_insert_rows": 3,
            "allow_delete": true,
            "validateFieldsSetting": "Dirty Fields Only",
            "delete_checkbox_label": "Delete",
            "delete_checkbox_label_position": "Left",
            "delete_checkbox_allowDeleteAll": false,
            "cancel_button_text": "Cancel",
            "submit_button_text": "Submit",
            "confirm_before_submit_message": "Submit changes?",
            "check_for_write_conflicts": true,
            "write_conflict_check_type": 2,
            "save_original_values": true,
            "TargetPage": "<Self>",
            "field_error_style": {
                "type": "Icon",
                "icon": "images/$$generic.error.png.a5image"
            },
            "RefreshRowMethod": "AutoSelect",
            "Editable_GridRow_Options_Style": "Icons",
            "RefreshRowOnFocus": true,
            "RefreshRowOnDirty": true,
            "row_errors_window_title": "Errors",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "RowEditStyle": "AllRows",
            "NewRecordsEditStyle": "AlwaysShown",
            "NewRecordsButtonLabel": "New Records",
            "DeleteRecordControl": "Checkbox",
            "HasRowStatusColumn": true,
            "OneEditableRowAtATime": true,
            "LazyEdit": true
        },
        "ValidationSettingsErrorTemplate": "Field '{Fieldlabel}', Value '{Value}' : {Error}",
        "ValidationSettingsMessage": "Click the 'Back' button and correct the errors.",
        "ValidationErrorsRowColumnTitle": "Row",
        "ValidationErrorsErrorColumnTitle": "Error",
        "OnlyValidateEditedFields": true,
        "AddNewRecordRowsPosition": "Bottom",
        "autoNumberColumnLabel": "Auto",
        "QuickSearch": {
            "QuickSearchPosition": "In Grid",
            "QuickSearchAlign": "Left",
            "ControlType": "Textbox",
            "AutoSubmit": true,
            "Label": "Search for:",
            "SearchButtonLabel": "Search",
            "AllowQBFStyleSearch": true,
            "SearchStyle": "Wildcard",
            "Height": 1,
            "SelectStyle": "Single",
            "Size": 20,
            "MaxLength": -1,
            "Orientation": "Horizontal",
            "choices": {
                "type": "Static",
                "datasource": "DBF-Table"
            },
            "connection_type": "Access Database",
            "HasShowAllButton": true,
            "ShowAllButtonLabel": "All"
        },
        "info": {
            "createdBy": "ASUS",
            "LastUpdatedBy": "ASUS",
            "DateUpdated": "13-11-2019 11:44:49 06 am",
            "DateCreated": "29-10-2019 08:58:35 93 am"
        },
        "BuilderVersion": 2,
        "current_pane_tree": "Code.Xbasic Functions",
        "hasActionButtons": true,
        "embeddedMode": false,
        "_style_versionNumber": 2,
        "AjaxOn": true,
        "fpInstalled": "FtbXCTxOYL1FRPkhgxL04QosPo76ZUtXHPJOF9UzYkH3IIsShPZ0Fd3N8MdobMGEPNKHkALJ6GxGiqZFpdJyXd/kZc/UcvZLJOek/+m6lZwNLZQLl0OSUwGGWK3ctugjAHyJEwUXI4ue13o/Js4OE5sfgSvIt0gniH8lXxomp/IgZcI7k5pVu2ScAS2gUnP3sYKdnUgoJindfGhT/iVmBvtDjhA8bpDGGDwIUEDhzdKyG0ygwwAdRPpph8TEhK/Au/SXeueZI7XcCEDYwcjFO3aWCc9iXOc/wbgzjJo10rf7as6uWN5PYi/wEOFuVk5HnFuxRJJGMYnENUh0bx98cYnTafYbWHgWt7CVUA2Vla9HFUOWjSGGVKGQlacgC4cCi330KSxGFN7jwlsLGPRv7HvA025kd9JOSkVhf/0X1i3k4YG2hjhOgF525fyBbRywXTyxoKyozTmrm8Fgruo+Cvsqhm9vg4MxhtLNGBpHwCWv++9AY8k1sFDDD40ck118nIGEVzFGsASuzNZ83nwvz6OgsYEcMgaZapzsFbqzW8yEdlkztwL6crUvwJBbuZ/kNDcyVVwjIOLCPPmSfeGe8bcGD5paeIlw8nPibld0/NOYNxeOYRPRplkldYsnDJW46JA9CX3oYcP/7uDAwgpKmkxc0F3KKuvnedTWf01eWLsQGEyrD7wuOtrE5KRecCv5fv6GUdlYuuKKNQg9rgbxnRVfqDUDLGnmNv/Lq2w6Ot9sUKAj4a9YV5OeUR/yyYjSaDduH3Ln+m15S44JlGwZ0gLxoXg5wMPzMaGn7YGFNYzzT1ikA9DmGQn1SX5ODUxQSghZ6Z0m+55AFI6642VKKZ6G5c0w4p8njaFng9UhsnSLskUMp0YtYwtZV98++nCf++Tpei7khhaKDodlPh+mnmc7KDmL7ujkoRRH7RvqPcWJdxrgAcFvdVxrQxget/OaJQFS3MiWVU60YKcbcHfrT1jEttsfk/PMmcmBs85pieJq5tF4Lx7MEoWcrCXFdviktV8Rg7vQIq3GNUwxR0D3v6xv48DhTp2fIZNzJsID5yO4e4vqrTjMlDuvTL4RpkOh5ds6Sof1QEtfLdXo8bWA1+5qP6CLjjTbyGMxbE193pKk1R9Mg86zKpJPUSRKrvl7UkeI+sE2P+N/Rv1zPmLaHZrEaI1Jl8rF2gL0NF3Izdh2+GeFn1raRhtYKKLF4IZ/bdPOD5Gi9dSIlzVLUguZon1sOMW3JXsa0Af4dSe+E26T9OMC0SGh0fZEK+lr0hetZCL+1aACzIT8d3mu05EmJKDcc5D5lUPbsIk14QTqd6V9SItCLI81V11unPj4PoKwAqL2KQYImWzzaE5wsv2o6waON9reCx+LO2Rz2mV5+OltxuNK5d6V9rTnlslu6zNZHawoXJFNw1oqmh8DCgoht1ShyVfJZg0xfjgdpUy9IjWtCFiNNJoiK3Kk8xra8v6SjAj79gVa+h8A5ZKnIkx0jL2EyruvMPyPUK8RqQJmRcrEuk9Z6++IXoaI11Q5OZ3s84KiQeluM8qOOgQRE92P3EbpYHQOHO5zGc+UZMEOvlKqcMpRv05sdG+FYUJ7uyAC/m+cNraRrP8thXZeJaLhq6xissmywbNma7aV6E855DeXbHR6luvjJsqDxJhT9qlzyh8jCpFyJ8fSEzLLbHNyBxpWa9ChsIg6UHyO6EAAcE1Zi1sVUa/Uwy5WCoc2wCgjfgQFCT8MuyBbCXlChNswnRqVXtoXxWx9haDZLssBiaUdIbvkWBgEnvL1HuNOE329cuOgnLk57x41v5JSOtEU5jAic1idhjeCmyOcksSDy0oEbyUoIOLi1SaLUx/de4xUQDnk2F5NcjP+IOj1D5GkPGIL5Xh2iDdtAQl32toUOATwrMAuhod/RwXOHuY2j54p2V9JuQr2LVnmS6oe70J2YpTmDnsNFjzYt6CL4rT1TcCdyjri4JojtDNOCz7KU9rB4P4UrdPSMr3lQEih8ui6A/+gosXRg2ULvWXNE0iEe4uWg1A0aSeN1af6TtUmZHpVctofF5PmcO/D7MEVNCzFYGilVL+KlU5NMs2F2TxYylQh6v97WhJpToEXzoLdwhyygfQ9Tnf7X0J+8rFWfPhV6z875pPWfShWn6usIUdeexB8aKKnyIO775GauKcEvyCPRWzyZ4GDtPZ0MxLAblpMR4ScEw5Rcc1J/iz1grf+/UvWbTRXwKeqcAr/ufe7p/JbTHdrLUxNidid0f/z2uC+2TUBt4yUV5+o3oRO5Ak24pYk6CzZVKhiqKhltfPl9Zjl5uYLXfxjZSrxpidzqR+61u9Rd8k80BVr3zCuJ7xqtF3pXuvvDyR/VV5aIG1zueQ/zlne99L439pC3P6sv6LMKzHO1x3NbqkuJwCBhBiMY1trEjcDgC/ioxlcZSEdUsy0K7LozNRvzyI8CJ/PdLoKcXh9rOO42+5SB/l7/Hjz4YV1TcZf743R7spWbxj+HKUs46vurn7cV8JbZFRzuw3Sn96SeDLY2ldHSSrOAX+ZAiDhUoyhpb1RwUOExYBOzu7nUHiTgTURX1SssITyCg3ZPrzwT36A+yb9CM14phRFlrsfHitGNM1SYTq/ol9k7E9+4KwaGrFmHPtwqdbrgK8RvOWUQqXuNAc/RzQewzoLEsgMhOI30ZR49esBfKUw2qawHy3sOzB59GrOwfz7mO7xDCvFtuZvXW3ASbvCk0FyV9KyNzbU+Ft1ZgQGg7I6ElRqx2w6un6UayF/0+QHDx+GSyEHvJoOhwQe6DrRlFmZnirj9DzY7pf5crzcykDTesHDoHYRryIwo4OoUHW3tIha1bU1hziWy2PmC8gM4UsMpLxBZDf1+G0glu25+3UJfEYS7OZyW7rK58OJbO2EC6Edm8LQFA+gOhaCrzNg10YBY7BqJjMndUiFUhk3SPBdFkOcbk231syKZtxw6xxd6vmMs2kRftv9OZ3gVNFhX1L41IJaPACQVmsJSpCK1MrjILGtYwGif5L04qRB8IobVBNV3/OSkP2iJB5at/pbtcv125GIlXhUsVxDaimAzZdTIWXjesm2hz6U7f10ffnyw7AUN3Y3bXbPPoDLMtuF3IqkKtltlTbciFinldZzrJLV1j+U4jeqWdFn3v8VmXQEfyqc0X+pNK6QmUN65NwT9QpYwkNz3aHUWKXHBoAi2rAR9SoBXPEfl59Zow3MRZOGVYlVXN7KncA2+K0ITKugArB0C2+mlaVtZORKR9X8+XhAyJB6eNjfg9gkt5BxQ4CK7yY7Y5RjyrvJx16pr1JfMATb23626/jd9ufHz4snbOwRBV2BdsqjpnmSn+cPOTyl6/BQKUi81ZDCKYg6oHtxPKBbuI70yUBMJph0hqQxDWuQAoxxlJoltun8Z0x6Mk0ksGq7DPAuWL6b8Hn4MCU+RZdW0Kl4IgulmgCOH2ijY/RXZarhZ87Eb3IGvgxxIC6/IHzcjiP6uysDcJqoZFyVC56gLtNgcTQXZmwrOu+DRCJfoj4sDAQ6iwFPMQ/2Uo/aWmxJuCI1jafEav5nymeWf/q40Wdv44mWUF4GM34GgaAl6Yc0",
        "componentFilename": "C:\\4-Trabajos\\Mariloginsa\\Nibble-TM\\Nibble-TM.WebProjects\\Default.WebProject\\IndicadorGerenciaaaaa.a5wcmp",
        "PAliases": {
            "alias": "[PathAlias.ADB_Path]\n",
            "alias_expanded": "C:\\4-Trabajos\\Mariloginsa\\Nibble-TM\n",
            "alias_aliasExpanded": "[PathAlias.ADB_Path]|C:\\4-Trabajos\\Mariloginsa\\Nibble-TM"
        },
        "_row_onHover": true,
        "ADB_PATH": "C:\\4-Trabajos\\Mariloginsa\\Nibble-TM",
        "EXE_PATH": "C:\\Program Files (x86)\\a5V12",
        "VersionNumber": 4,
        "__wphostname": "Chrome",
        "controls": [
            {
                "idInternal": "163b40b9-7cb7-451e-8a20-36e34d29f0e6",
                "type": "Button",
                "Name": "FA",
                "trailingSeparator": true,
                "readDataFrom": "GridPart",
                "actionJSAttribute": "/* actionJavascript:95e5c343-b7d0-40a7-af58-dd084546caff  */\nfunction tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f() {\nvar dropDownType = 'wait';\nvar title = 'Espere por favor';\nvar msgBody = '';\nvar width = '300px';\nvar oKButtonLabel = '';\nvar cancelButtonLabel = '';\nvar loc = 'center';\nvar onOK = function() { alert('pressed ok'); };\nvar onCancel = function() { };\n{grid.object}.dropDownMessage(dropDownType,title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel, loc);\n}\n\nfunction tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa() {\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiempos','','',{});\n}\n\nfunction tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5() {\n{grid.object}.dropDownMessageHide();\n}\n\n\nA5.executeThisThenThat(tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f,tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa,tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5);",
                "buttonStyle": "Text only",
                "buttonClass": "[class.gridButton]",
                "buttonClassHover": "[class.gridButtonHover]",
                "buttonClassPressed": "[class.gridButtonPressed]",
                "buttonClassDisabled": "[class.gridButtonDisabled]",
                "buttonText": "BUTTON",
                "hyperlinkClass": "[class.gridHyperlinkButton]",
                "hyperlinkImagePosition": "None",
                "readDataFromForClientSideExpns": "GridPart",
                "precalc": {
                    "buttonObjectJavascript": "window['{grid.componentName}_BUTTONS_FA'] = new A5.Button({\n\tlayout: 'text',\n\tclassName: '[class.gridButton]',\n\thoverClassName: '[class.gridButtonHover]',\n\tpressedClassName: '[class.gridButtonPressed]',\n\tdisabledClassName: '[class.gridButtonDisabled]',\n\thtml: 'BUTTON',\n\tonClick: function() { /* actionJavascript:95e5c343-b7d0-40a7-af58-dd084546caff  */\nfunction tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f() {\nvar dropDownType = 'wait';\nvar title = 'Espere por favor';\nvar msgBody = '';\nvar width = '300px';\nvar oKButtonLabel = '';\nvar cancelButtonLabel = '';\nvar loc = 'center';\nvar onOK = function() { alert('pressed ok'); };\nvar onCancel = function() { };\n{grid.object}.dropDownMessage(dropDownType,title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel, loc);\n}\n\nfunction tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa() {\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiempos','','',{});\n}\n\nfunction tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5() {\n{grid.object}.dropDownMessageHide();\n}\n\n\nA5.executeThisThenThat(tempfunction_c39d9e10_4d30_472e_bf1d_6415bb470e9f,tempfunction_53bb07f0_f559_42ee_b067_73290d4a05aa,tempfunction_9057a486_9fd2_4af1_a388_7eab2228a1d5);\n},\n\ttheme: '{grid.style}'\n});",
                    "objectHTML": "<button type=\"button\" id=\"{id}\"></button>&nbsp;",
                    "objectName": "{grid.componentName}_BUTTONS_FA",
                    "bindJS": "{grid.componentName}_BUTTONS_FA.bind({bindIdList});"
                }
            },
            {
                "idInternal": "9027a34b-2401-43d0-8dd4-ef9859512f57",
                "type": "Button",
                "Name": "IND6",
                "trailingSeparator": true,
                "readDataFrom": "GridPart",
                "actionJSAttribute": "/* actionJavascript:12671d61-5396-45b2-96d8-3437214d9f40 */\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiemposIndicador6','','',{});",
                "buttonStyle": "Text only",
                "buttonClass": "[class.gridButton]",
                "buttonClassHover": "[class.gridButtonHover]",
                "buttonClassPressed": "[class.gridButtonPressed]",
                "buttonClassDisabled": "[class.gridButtonDisabled]",
                "buttonText": "Ind6",
                "hyperlinkClass": "[class.gridHyperlinkButton]",
                "hyperlinkImagePosition": "None",
                "readDataFromForClientSideExpns": "GridPart",
                "precalc": {
                    "buttonObjectJavascript": "window['{grid.componentName}_BUTTONS_IND6'] = new A5.Button({\n\tlayout: 'text',\n\tclassName: '[class.gridButton]',\n\thoverClassName: '[class.gridButtonHover]',\n\tpressedClassName: '[class.gridButtonPressed]',\n\tdisabledClassName: '[class.gridButtonDisabled]',\n\thtml: 'Ind6',\n\tonClick: function() { /* actionJavascript:12671d61-5396-45b2-96d8-3437214d9f40 */\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiemposIndicador6','','',{});\n},\n\ttheme: '{grid.style}'\n});",
                    "objectHTML": "<button type=\"button\" id=\"{id}\"></button>&nbsp;",
                    "objectName": "{grid.componentName}_BUTTONS_IND6",
                    "bindJS": "{grid.componentName}_BUTTONS_IND6.bind({bindIdList});"
                }
            }
        ],
        "CurrentSelectionActionButtons": "9027a34b-2401-43d0-8dd4-ef9859512f57",
        "a_actionJavascript": [
            {
                "actionGuid": "95e5c343-b7d0-40a7-af58-dd084546caff ",
                "scriptMetaData": "<a_ajs<[1]<action=\"Inline-Javascript\">\n<icon=\"a5_new_xbasic_script\">\n<isCommentedOut=.F.>\n<comment=\"abrir procesando\">\n<builder=\"a5ajs_Inline(v,dlg_mode,wf)\">\n<metaData=<<%str1%\n<inlineJavascript=<<%str%\nvar dropDownType = 'wait';\nvar title = 'Espere por favor';\nvar msgBody = '';\nvar width = '300px';\nvar oKButtonLabel = '';\nvar cancelButtonLabel = '';\nvar loc = 'center';\nvar onOK = function() { alert('pressed ok'); };\nvar onCancel = function() { };\n{grid.object}.dropDownMessage(dropDownType,title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel, loc);%str%>\n%str1%>\n<javascriptAttribute=<<%str%\nvar dropDownType = 'wait';\nvar title = 'Espere por favor';\nvar msgBody = '';\nvar width = '300px';\nvar oKButtonLabel = '';\nvar cancelButtonLabel = '';\nvar loc = 'center';\nvar onOK = function() { alert('pressed ok'); };\nvar onCancel = function() { };\n{grid.object}.dropDownMessage(dropDownType,title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel, loc);%str%>\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=\"\">\n<xbasicFunctions=\"\">\n<display=\"{I:'a5_new_xbasic_script'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Inline-Javascript{T=4}{I:'a5_vertical_line'}abrir procesando\">\n>\n<[2]<display=\"{I:'$$edit.redo'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Ajax Callback{T=4}{I:'a5_vertical_line'}\">\n<action=\"Ajax Callback\">\n<icon=\"$$edit.redo\">\n<isCommentedOut=.F.>\n<comment=\"\">\n<builder=\"a5ajs_AjaxCallBack(v, dlg_mode, wf)\">\n<metaData=<<%str%\n<flagSubmitData=.T.>\n<part=\"Grid\">\n<GridRowNumber=\"{Grid.RowNumber}\">\n<ajaxCallbackType=\"InternalXbasicFunction\">\n<functionName=\"paraTiempos\">\n<callbackURL=\"\">\n<callbackActionName=\"\">\n<otherData=\"\">\n<computeCurrentRowdata=.F.>\n<submitLocationInfo=.F.>\n<ajaxFailedJavascript=\"\">\n<offlineJavascript=\"\">\n<afterCallbackCompleteJavascript=\"\">\n<locationHighAccuracy=.T.>\n<locationTimeout=15000>\n<locationMaxAge=30000>\n<ajaxcallbacktimeout=\"<Default>\">\n<chunkedResponses<allow=.F.>\n<maxMessages=-1>\n<maxTime=600>\n>\n%str%>\n<javascriptAttribute=<<%str%\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiempos','','',{});%str%>\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=\"\">\n<xbasicFunctions=\"\">\n>\n<[3]<action=\"Inline-Javascript\">\n<icon=\"a5_new_xbasic_script\">\n<isCommentedOut=.F.>\n<comment=\"cerrar procesando\">\n<builder=\"a5ajs_Inline(v,dlg_mode,wf)\">\n<metaData=<<%str%\n<inlineJavascript=\"{grid.object}.dropDownMessageHide();\">\n%str%>\n<javascriptAttribute=\"{grid.object}.dropDownMessageHide();\">\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=\"\">\n<xbasicFunctions=\"\">\n<display=\"{I:'a5_new_xbasic_script'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Inline-Javascript{T=4}{I:'a5_vertical_line'}cerrar procesando\">\n>\n>\n<flagRunSynchronously=.T.>\n<flagWrapInTryCatch=.F.>\n<tryCatchJavascript=\"\">\n"
            },
            {
                "actionGuid": "12671d61-5396-45b2-96d8-3437214d9f40",
                "scriptMetaData": "<a_ajs<[1]<display=\"{I:'$$edit.redo'}{F=Tahoma,10}{C=Dark Blue,White}{B=Blue White,Dark Blue}Ajax Callback{T=4}{I:'a5_vertical_line'}\">\n<action=\"Ajax Callback\">\n<icon=\"$$edit.redo\">\n<isCommentedOut=.F.>\n<comment=\"\">\n<builder=\"a5ajs_AjaxCallBack(v, dlg_mode, wf)\">\n<metaData=<<%str%\n<flagSubmitData=.T.>\n<part=\"Grid\">\n<GridRowNumber=\"{Grid.RowNumber}\">\n<ajaxCallbackType=\"InternalXbasicFunction\">\n<functionName=\"paraTiemposIndicador6\">\n<callbackURL=\"\">\n<callbackActionName=\"\">\n<otherData=\"\">\n<computeCurrentRowdata=.F.>\n<submitLocationInfo=.F.>\n<ajaxFailedJavascript=\"\">\n<offlineJavascript=\"\">\n<afterCallbackCompleteJavascript=\"\">\n<locationHighAccuracy=.T.>\n<locationTimeout=15000>\n<locationMaxAge=30000>\n<ajaxcallbacktimeout=\"<Default>\">\n<chunkedResponses<allow=.F.>\n<maxMessages=-1>\n<maxTime=600>\n>\n%str%>\n<javascriptAttribute=<<%str%\nvar rowNum = {grid.object}._selectedRow;\n{grid.Object}.ajaxCallback('G',rowNum,'paraTiemposIndicador6','','',{});%str%>\n<Javascriptdeclarations_row=\"\">\n<Javascriptdeclarations_global=\"\">\n<xbasicFunctions=\"\">\n>\n>\n<flagRunSynchronously=.F.>\n<flagWrapInTryCatch=.F.>\n<tryCatchJavascript=\"\">\n"
            }
        ],
        "A5SaveTimeStamp": "20191113114449113"
    }
}